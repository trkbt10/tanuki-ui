.mediaPreviewContainer {
  display: inline-block;
  position: relative;
  width: auto;
  height: auto;
  min-width: var(--min-width, 64px);
  min-height: var(--min-height, 64px);
  max-width: var(--max-width, 256px);
  max-height: var(--max-height, 256px);
  border-radius: var(--controlBorderRadius, 4px);
  overflow: hidden;
  background: var(--windowBackgroundColor);
  border: var(--inputBorder);
  box-shadow: var(--controlBoxShadow);
  box-sizing: border-box;
}

.mediaPreview {
  width: 100%;
  height: 100%;
  object-fit: contain;
  object-position: center;
  display: block;
  
  /* Apply aspect ratio constraints using clamp and CSS functions */
  aspect-ratio: clamp(
    var(--aspect-ratio-min, 0.25),
    attr(width) / attr(height),
    var(--aspect-ratio-max, 4)
  );
  
  /* Fallback for browsers that don't support aspect-ratio */
  min-width: var(--min-width, 64px);
  min-height: var(--min-height, 64px);
  max-width: var(--max-width, 256px);
  max-height: var(--max-height, 256px);
}

/* Handle extreme aspect ratios */
.mediaPreview {
  /* For very wide images (panoramic) */
  max-width: min(var(--max-width, 256px), calc(var(--max-height, 256px) * var(--aspect-ratio-max, 4)));
  
  /* For very tall images (portrait) */
  max-height: min(var(--max-height, 256px), calc(var(--max-width, 256px) / var(--aspect-ratio-min, 0.25)));
}

/* Loading state */
.mediaPreviewContainer::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 24px;
  height: 24px;
  border: 2px solid var(--separatorColor);
  border-top: 2px solid var(--accentColor);
  border-radius: 50%;
  animation: spin 0.8s linear infinite;
  opacity: 0;
  pointer-events: none;
}

.mediaPreviewContainer:has(.mediaPreview:not([src])),
.mediaPreviewContainer:has(.mediaPreview[src=""]) {
}

.mediaPreviewContainer:has(.mediaPreview:not([src]))::before,
.mediaPreviewContainer:has(.mediaPreview[src=""])::before {
  opacity: 1;
}

@keyframes spin {
  0% { transform: translate(-50%, -50%) rotate(0deg); }
  100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* Error state */
.mediaPreview:not([src]),
.mediaPreview[src=""] {
  opacity: 0;
}

/* Hover effects */
.mediaPreviewContainer:hover {
  border-color: var(--accentColor);
  box-shadow: var(--controlBoxShadow--primary, var(--controlBoxShadow));
  transition: all 0.1s ease;
}

/* Focus styles for accessibility */
.mediaPreviewContainer:focus-within {
  outline: 2px solid var(--accentColor);
  outline-offset: 2px;
  box-shadow: var(--inputBoxShadow);
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .mediaPreviewContainer {
    border-width: 2px;
    border-color: ButtonText;
  }
  
  .mediaPreviewContainer:hover {
    border-color: Highlight;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .mediaPreviewContainer::before {
    animation: none;
  }
  
  .mediaPreviewContainer:hover {
    transition: none;
  }
}