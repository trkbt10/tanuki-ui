/**
 * Action type constants for Node Editor
 */
export declare const NODE_EDITOR_ACTIONS: {
    readonly ADD_NODE: "ADD_NODE";
    readonly UPDATE_NODE: "UPDATE_NODE";
    readonly DELETE_NODE: "DELETE_NODE";
    readonly MOVE_NODE: "MOVE_NODE";
    readonly MOVE_NODES: "MOVE_NODES";
    readonly DUPLICATE_NODES: "DUPLICATE_NODES";
    readonly ADD_CONNECTION: "ADD_CONNECTION";
    readonly DELETE_CONNECTION: "DELETE_CONNECTION";
    readonly GROUP_NODES: "GROUP_NODES";
    readonly UNGROUP_NODE: "UNGROUP_NODE";
    readonly UPDATE_GROUP_MEMBERSHIP: "UPDATE_GROUP_MEMBERSHIP";
    readonly MOVE_GROUP_WITH_CHILDREN: "MOVE_GROUP_WITH_CHILDREN";
    readonly SET_NODE_DATA: "SET_NODE_DATA";
    readonly RESTORE_STATE: "RESTORE_STATE";
    readonly AUTO_LAYOUT: "AUTO_LAYOUT";
};
export type NodeEditorActionType = typeof NODE_EDITOR_ACTIONS[keyof typeof NODE_EDITOR_ACTIONS];
/**
 * Action type constants for Editor Action State
 */
export declare const EDITOR_ACTION_STATE_ACTIONS: {
    readonly SELECT_NODE: "SELECT_NODE";
    readonly SELECT_CONNECTION: "SELECT_CONNECTION";
    readonly SELECT_NODES_IN_BOX: "SELECT_NODES_IN_BOX";
    readonly SET_SELECTED_NODES: "SET_SELECTED_NODES";
    readonly SET_SELECTED_CONNECTIONS: "SET_SELECTED_CONNECTIONS";
    readonly CLEAR_SELECTION: "CLEAR_SELECTION";
    readonly START_SELECTION_BOX: "START_SELECTION_BOX";
    readonly UPDATE_SELECTION_BOX: "UPDATE_SELECTION_BOX";
    readonly END_SELECTION_BOX: "END_SELECTION_BOX";
    readonly START_NODE_DRAG: "START_NODE_DRAG";
    readonly UPDATE_NODE_DRAG: "UPDATE_NODE_DRAG";
    readonly END_NODE_DRAG: "END_NODE_DRAG";
    readonly START_NODE_RESIZE: "START_NODE_RESIZE";
    readonly UPDATE_NODE_RESIZE: "UPDATE_NODE_RESIZE";
    readonly END_NODE_RESIZE: "END_NODE_RESIZE";
    readonly START_CONNECTION_DRAG: "START_CONNECTION_DRAG";
    readonly UPDATE_CONNECTION_DRAG: "UPDATE_CONNECTION_DRAG";
    readonly END_CONNECTION_DRAG: "END_CONNECTION_DRAG";
    readonly START_CONNECTION_DISCONNECT: "START_CONNECTION_DISCONNECT";
    readonly UPDATE_CONNECTION_DISCONNECT: "UPDATE_CONNECTION_DISCONNECT";
    readonly END_CONNECTION_DISCONNECT: "END_CONNECTION_DISCONNECT";
    readonly SET_HOVERED_NODE: "SET_HOVERED_NODE";
    readonly SET_HOVERED_CONNECTION: "SET_HOVERED_CONNECTION";
    readonly SET_HOVERED_PORT: "SET_HOVERED_PORT";
    readonly UPDATE_CONNECTED_PORTS: "UPDATE_CONNECTED_PORTS";
    readonly SHOW_CONTEXT_MENU: "SHOW_CONTEXT_MENU";
    readonly HIDE_CONTEXT_MENU: "HIDE_CONTEXT_MENU";
};
export type EditorActionStateActionType = typeof EDITOR_ACTION_STATE_ACTIONS[keyof typeof EDITOR_ACTION_STATE_ACTIONS];
/**
 * Action type constants for Node Canvas
 */
export declare const NODE_CANVAS_ACTIONS: {
    readonly SET_VIEWPORT: "SET_VIEWPORT";
    readonly SET_OFFSET: "SET_OFFSET";
    readonly SET_SCALE: "SET_SCALE";
    readonly RESET_VIEWPORT: "RESET_VIEWPORT";
    readonly SET_IS_PANNING: "SET_IS_PANNING";
    readonly SET_SPACE_PRESSED: "SET_SPACE_PRESSED";
    readonly SET_INTERACTION_MODE: "SET_INTERACTION_MODE";
};
export type NodeCanvasActionType = typeof NODE_CANVAS_ACTIONS[keyof typeof NODE_CANVAS_ACTIONS];
