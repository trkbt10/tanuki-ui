name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no actual publish)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Run type check
        run: bun run typecheck:no-stories
        
      - name: Run tests
        run: bun test
        
      - name: Build library
        run: bun run build
        
      - name: Check build output
        run: |
          echo "Checking dist folder contents:"
          ls -la dist/
          ls -la dist/lib/
          ls -la dist/types/
          
      - name: Dry run publish
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true'
        run: npm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish to NPM
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false')
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub deployment
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false')
        uses: actions/github-script@v7
        with:
          script: |
            const package = require('./package.json');
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'npm',
              description: `Published version ${package.version} to npm`,
              auto_merge: false,
              required_contexts: [],
              production_environment: true
            });