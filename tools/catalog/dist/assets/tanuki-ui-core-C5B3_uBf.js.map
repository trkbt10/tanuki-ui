{"version":3,"file":"tanuki-ui-core-C5B3_uBf.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../../../src/hooks/pointer-utilities/ObservePointerCallback.tsx","../../../../src/hooks/usePointerObserver.tsx","../../../../src/hooks/useMeasure.tsx","../../../../node_modules/react-use/esm/usePrevious.js","../../../../src/hooks/usePopup.tsx","../../../../src/hooks/useDocumentBody.tsx","../../../../src/dialogs/Portal.tsx","../../../../src/hooks/useControlledInputState.tsx","../../../../src/dialogs/Dialog.tsx","../../../../src/dialogs/parts/PopupLayout.tsx","../../../../src/dialogs/Drawer.tsx","../../../../src/blocks/Text.tsx","../../../../src/form/EditableLabel.tsx","../../../../src/controls/NativeSortable.tsx","../../../../src/navigations/TabNav.tsx","../../../../src/bars/TabBar.tsx","../../../../src/blocks/ChevronMark.tsx","../../../../src/blocks/SearchIcon.tsx","../../../../src/bars/Toolbar.tsx","../../../../src/blocks/Icon.tsx","../../../../src/controls/Resizer.tsx","../../../../src/controls/Segment.tsx","../../../../src/hooks/useToggle.tsx","../../../../src/controls/SegmentedControl.tsx","../../../../src/elements/Heading.tsx","../../../../src/utilities/classNames.ts","../../../../src/form/Button.tsx","../../../../src/dialogs/Alert.tsx","../../../../src/dialogs/Modal.tsx","../../../../src/utilities/isBase64.ts","../../../../src/utilities/isURL.ts","../../../../src/hooks/useObjectURLs.tsx","../../../../src/hooks/useMediaInputI18n.tsx","../../../../src/form/custom-inputs/MediaPreview.tsx","../../../../src/utilities/isRelativeURL.tsx","../../../../src/form/custom-inputs/MediaInput.tsx","../../../../src/form/custom-inputs/RangeInput.tsx","../../../../src/form/custom-inputs/SwitchInput.tsx","../../../../src/form/custom-inputs/DateTimeInput.tsx","../../../../src/form/Input.tsx","../../../../src/form/Label.tsx","../../../../src/form/SortableList.tsx","../../../../src/form/shared/SelectDropdown.tsx","../../../../src/form/shared/SelectInput.tsx","../../../../src/form/shared/SelectTags.tsx","../../../../src/form/shared/useSelectBehavior.ts","../../../../src/form/shared/useSelectDropdown.ts","../../../../src/form/shared/useSelectableOptions.ts","../../../../src/form/DataList.tsx","../../../../src/form/CloseButton.tsx","../../../../src/blocks/Time.tsx","../../../../src/elements/List.tsx","../../../../src/form/Fieldset.tsx","../../../../src/form/Legend.tsx","../../../../src/elements/Table.tsx","../../../../src/form/Selectbox.tsx","../../../../src/form/Textarea.tsx","../../../../src/navigations/SidebarList.tsx","../../../../src/elements/Anchor.tsx","../../../../src/elements/Image.tsx","../../../../src/elements/Details.tsx","../../../../src/elements/Summary.tsx","../../../../src/elements/Paragraph.tsx","../../../../src/elements/Descriptions.tsx","../../../../src/elements/HorizontalRule.tsx","../../../../src/elements/Article.tsx","../../../../src/elements/Section.tsx","../../../../src/elements/Nav.tsx","../../../../src/elements/Main.tsx","../../../../src/elements/Header.tsx","../../../../src/elements/Footer.tsx","../../../../src/elements/Aside.tsx","../../../../src/elements/Address.tsx","../../../../src/elements/Blockquote.tsx","../../../../src/elements/Figure.tsx","../../../../src/elements/Figcaption.tsx","../../../../src/elements/Pre.tsx","../../../../src/elements/Div.tsx","../../../../src/form/Form.tsx","../../../../src/form/Progress.tsx","../../../../src/form/Meter.tsx","../../../../src/form/Output.tsx","../../../../src/form/Optgroup.tsx","../../../../src/form/Option.tsx","../../../../src/elements/Strong.tsx","../../../../src/elements/Em.tsx","../../../../src/elements/Small.tsx","../../../../src/elements/Mark.tsx","../../../../src/elements/Del.tsx","../../../../src/elements/Ins.tsx","../../../../src/elements/Sub.tsx","../../../../src/elements/Sup.tsx","../../../../src/elements/Code.tsx","../../../../src/elements/Kbd.tsx","../../../../src/elements/Samp.tsx","../../../../src/elements/Var.tsx","../../../../src/elements/Abbr.tsx","../../../../src/elements/Cite.tsx","../../../../src/elements/Dfn.tsx","../../../../src/elements/Q.tsx","../../../../src/elements/Ruby.tsx","../../../../src/elements/Rt.tsx","../../../../src/elements/Ol.tsx","../../../../src/elements/Dd.tsx","../../../../src/elements/Dt.tsx","../../../../src/elements/Th.tsx","../../../../src/elements/Td.tsx","../../../../src/elements/Caption.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import { PointerInfo } from \"../usePointerObserver\";\n\nexport type ObservePointerCallback = (params: PointerInfo) => void;\ntype TargetPointer = Omit<PointerInfo, \"pointerId\" | \"type\" | \"pageX\" | \"pageY\" | \"isFinal\">;\n\nexport class PointerManager {\n  private rafId: number = 0;\n  private pointerIds: string[] = [];\n  private handlers: { [pointerId: string]: ObservePointerCallback } = {};\n  private targetPointers: {\n    [pointerId: string]: TargetPointer;\n  } = {};\n  private pointers: {\n    [pointerId: string]: {\n      pageX: number;\n      pageY: number;\n    };\n  } = {};\n  constructor() {\n    window.addEventListener(\"pointermove\", (e) => {\n      if (!this.pointers[e.pointerId]) {\n        this.pointers[e.pointerId] = {\n          pageX: e.pageX,\n          pageY: e.pageY,\n        };\n      } else {\n        this.pointers[e.pointerId].pageX = e.pageX;\n        this.pointers[e.pointerId].pageY = e.pageY;\n      }\n    });\n    window.addEventListener(\"pointercancel\", (e) => this.removeTrackTarget(e));\n    window.addEventListener(\"pointerup\", (e) => this.removeTrackTarget(e));\n    document.addEventListener(\"pointerleave\", (e) => this.removeTrackTarget(e));\n    this.start();\n  }\n  start() {\n    this.tick();\n  }\n  end() {\n    cancelAnimationFrame(this.rafId);\n  }\n  removeTrackTarget(e: PointerEvent) {\n    this.emitChange(e.pointerId.toString(), \"pointerend\");\n    delete this.pointers[e.pointerId];\n    delete this.targetPointers[e.pointerId];\n    delete this.handlers[e.pointerId];\n    const index = this.pointerIds.indexOf(e.pointerId.toString());\n    this.pointerIds.splice(index, 1);\n  }\n\n  tick() {\n    this.rafId = requestAnimationFrame(() => this.tick());\n    for (const pointerId of this.pointerIds) {\n      const trackTarget = this.targetPointers[pointerId];\n      const pointerInfo = this.pointers[pointerId];\n      if (!trackTarget || !pointerInfo) {\n        continue;\n      }\n\n      const [prevX, prevY] = [trackTarget.deltaX, trackTarget.deltaY];\n      trackTarget.deltaX = pointerInfo.pageX - trackTarget.startX;\n      trackTarget.deltaY = pointerInfo.pageY - trackTarget.startY;\n      trackTarget.elapsedtime = performance.now() - trackTarget.timestamp;\n      if (prevX === trackTarget.deltaX && prevY === trackTarget.deltaY) {\n        continue;\n      }\n      this.emitChange(pointerId, \"pointermove\");\n    }\n  }\n  emitChange(pointerId: string | number, eventType: PointerInfo[\"type\"]) {\n    if (!this.handlers[pointerId]) {\n      return;\n    }\n    const trackTarget = this.targetPointers[pointerId];\n    const pointerInfo = this.pointers[pointerId];\n    this.handlers[pointerId]({\n      pointerId: pointerId.toString(),\n      timestamp: trackTarget.timestamp,\n      elapsedtime: trackTarget.elapsedtime,\n      type: eventType,\n      pageX: pointerInfo.pageX,\n      pageY: pointerInfo.pageY,\n      deltaX: trackTarget.deltaX,\n      deltaY: trackTarget.deltaY,\n      startX: trackTarget.startX,\n      startY: trackTarget.startY,\n      clientX: trackTarget.clientX,\n      clientY: trackTarget.clientY,\n      offsetX: trackTarget.offsetX,\n      offsetY: trackTarget.offsetY,\n      button: trackTarget.button,\n      isFinal: eventType === \"pointerend\",\n      target: trackTarget.target,\n      ZIndexList: trackTarget.ZIndexList,\n      defaultPrevented: trackTarget.defaultPrevented,\n    });\n  }\n  addTrackTarget(e: PointerEvent, callback: ObservePointerCallback) {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    this.pointerIds.push(e.pointerId.toString());\n    this.targetPointers[e.pointerId] = {\n      timestamp: performance.now(),\n      elapsedtime: 0,\n      deltaX: 0,\n      deltaY: 0,\n      startX: e.pageX,\n      startY: e.pageY,\n      button: e.button,\n      target: e.target,\n      clientX: e.clientX,\n      clientY: e.clientY,\n      offsetX: e.offsetX,\n      offsetY: e.offsetY,\n      ZIndexList: getZIndexList(e.target),\n      defaultPrevented: e.defaultPrevented,\n    };\n    this.pointerIds = this.pointerIds.sort((a, b) => {\n      return compareTwoPointerIndex(this.targetPointers[a]?.ZIndexList ?? [], this.targetPointers[b]?.ZIndexList ?? []);\n    });\n    this.pointers[e.pointerId] = {\n      pageX: e.pageX,\n      pageY: e.pageY,\n    };\n    this.handlers[e.pointerId] = callback;\n    this.emitChange(e.pointerId, \"pointerdown\");\n  }\n}\nconst compareTwoPointerIndex = (a: number[], b: number[]) => {\n  const pointerSize = Math.max(a.length, b.length);\n  if (pointerSize <= 0) {\n    return 0;\n  }\n  for (let i = 0; i < pointerSize; i++) {\n    const az = a[i];\n    const bz = b[i];\n    if (typeof az === \"undefined\") {\n      return -1;\n    }\n    if (typeof bz === \"undefined\") {\n      return 1;\n    }\n    if (az === bz) {\n      continue;\n    }\n    return az > bz ? -1 : 1;\n  }\n  return 0;\n};\nconst getZIndexList = (e: HTMLElement): number[] => {\n  const results: number[] = [];\n  const walker = (e: HTMLElement): any => {\n    const z = window.getComputedStyle(e).getPropertyValue(\"z-index\");\n\n    const zNumber = +z;\n    if (!Number.isNaN(zNumber)) {\n      results.push(zNumber);\n    }\n    if (e.parentElement) {\n      walker(e.parentElement);\n    }\n  };\n  walker(e);\n  return results.reverse();\n};\n","import * as React from \"react\";\nimport { PointerManager, ObservePointerCallback } from \"./pointer-utilities/ObservePointerCallback\";\nexport type { ObservePointerCallback };\nexport type PointerInfo = {\n  pointerId: string;\n  type: \"pointerdown\" | \"pointerend\" | \"pointermove\";\n  timestamp: number;\n  elapsedtime: number;\n  pageX: number;\n  pageY: number;\n  deltaX: number;\n  deltaY: number;\n  startX: number;\n  startY: number;\n  clientX: number;\n  clientY: number;\n  offsetX: number;\n  offsetY: number;\n  button: number;\n  isFinal: boolean;\n  target: Element;\n  defaultPrevented: boolean;\n  ZIndexList: number[];\n};\n\nlet tm: PointerManager;\n\nexport const useObservePointer = <T extends HTMLElement | SVGElement>(\n  ref: React.RefObject<T | null>,\n  callback: ObservePointerCallback,\n) => {\n  if (!tm) {\n    tm = new PointerManager();\n  }\n  const callbackRef = React.useRef<ObservePointerCallback>(callback);\n  callbackRef.current = callback;\n\n  React.useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const elm = ref.current as HTMLElement;\n    const handlePointerDown = (e: PointerEvent) => {\n      if (e.defaultPrevented) {\n        return;\n      }\n      e.preventDefault();\n      tm.addTrackTarget(e, (params) => {\n        if (!callbackRef.current) {\n          return;\n        }\n        callbackRef.current(params);\n      });\n    };\n    elm.addEventListener(\"pointerdown\", handlePointerDown);\n    return () => {\n      elm.removeEventListener(\"pointerdown\", handlePointerDown);\n    };\n  }, []);\n};\nexport const observePointer = useObservePointer;\n\nexport const usePointerObserver = <T extends HTMLElement | SVGElement>(ref: React.RefObject<T>) => {\n  const [pointerInfo, setPointerInfo] = React.useState<PointerInfo>();\n  useObservePointer(ref, setPointerInfo);\n  return [pointerInfo];\n};\n","import * as React from \"react\";\n\ntype BoundingRect = {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n};\nexport const useMeasure = <T extends HTMLElement = HTMLElement>(ref: React.RefObject<T | null>) => {\n  const [measure, setMeasure] = React.useState<BoundingRect>();\n  const debounced = React.useDeferredValue(measure);\n  const measuring = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    const boundingBox = ref.current.getBoundingClientRect();\n    setMeasure({\n      x: boundingBox.x,\n      y: boundingBox.y,\n      width: boundingBox.width,\n      height: boundingBox.height,\n    });\n  }, [setMeasure]);\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", measuring);\n    return () => {\n      window.removeEventListener(\"scroll\", measuring);\n    };\n  }, []);\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", measuring, false);\n    measuring();\n    return () => {\n      window.removeEventListener(\"resize\", measuring, false);\n    };\n  }, [measuring]);\n  React.useEffect(() => {\n    const observer = new ResizeObserver((entries) => {\n      measuring();\n    });\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n      observer.disconnect();\n    };\n  }, [measuring]);\n  return [debounced, measuring] as const;\n};\n","import { useEffect, useRef } from 'react';\nexport default function usePrevious(state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const usePopup = <T extends HTMLElement = HTMLDivElement>({\n  onClose: onClose,\n  id,\n}: {\n  onClose: (...params: any[]) => any;\n  id?: string;\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const bodyRef = useRef<T>(null);\n  const dismissRef = useRef(onClose);\n  dismissRef.current = onClose;\n  useEffect(() => {\n    let memorizedTarget: EventTarget | null;\n    const handleWindowClick = (ev: PointerEvent) => {\n      if (ev.defaultPrevented) {\n        return;\n      }\n      if (!bodyRef.current) {\n        return;\n      }\n      if (!(ev.target instanceof HTMLElement)) {\n        return;\n      }\n      if (ev.type === \"pointerdown\") {\n        memorizedTarget = ev.target;\n      }\n      if (ev.type !== \"pointerdown\" && memorizedTarget !== ev.target) {\n        return;\n      }\n      if (bodyRef.current.contains(ev.target)) {\n        ev.stopPropagation();\n        return;\n      }\n      if (containerRef.current?.contains(ev.target)) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        dismissRef.current();\n        return;\n      }\n    };\n    window?.addEventListener(\"pointerdown\", handleWindowClick, true);\n    window?.addEventListener(\"pointerup\", handleWindowClick, true);\n    return () => {\n      window?.removeEventListener(\"pointerdown\", handleWindowClick, true);\n      window?.removeEventListener(\"pointerup\", handleWindowClick, true);\n    };\n  }, []);\n  return [containerRef, bodyRef] as const;\n};\n","import React from \"react\";\n\nexport const useDocument = () => {\n  const document = React.useMemo(() => {\n    if (typeof window === \"undefined\") {\n      return null;\n    }\n    return window.document;\n  }, []);\n  return document;\n};\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useDocument } from \"../hooks/useDocumentBody\";\nexport const Portal: React.FC<React.PropsWithChildren<{ parentNode?: HTMLElement | null }>> = ({ children, parentNode }) => {\n  const uniqueId = React.useId();\n  const [mountNode, setMountNode] = React.useState<HTMLElement>();\n  const document = useDocument();\n  React.useEffect(() => {\n    if (!document) {\n      return;\n    }\n    const element = document.createElement(\"div\");\n    element.setAttribute(\"id\", uniqueId);\n    document.body.appendChild(element);\n    setMountNode(element);\n    return () => {\n      if (document.body.contains(element)) {\n        document.body.removeChild(element);\n      }\n      setMountNode(undefined);\n    };\n  }, [uniqueId, document]);\n  const zIndexList = React.useMemo(() => {\n    if (!parentNode) {\n      return [1];\n    }\n    return getZIndexList(parentNode);\n  }, [parentNode, uniqueId]);\n  if (!(mountNode && zIndexList)) {\n    return <></>;\n  }\n  return <>{createPortal(<PortalLayer zIndexList={zIndexList}>{children}</PortalLayer>, mountNode)}</>;\n};\nconst PortalLayer = ({ zIndexList, children }: React.PropsWithChildren<{ zIndexList: number[] }>) => {\n  const [zIndex, ...otherZIndex] = zIndexList;\n  return (\n    <div style={{ position: \"relative\", zIndex }}>\n      {otherZIndex.length ? <PortalLayer zIndexList={otherZIndex}>{children}</PortalLayer> : children}\n    </div>\n  );\n};\n\nconst getZIndexList = (e: HTMLElement): number[] => {\n  const results: number[] = [];\n  const walker = (e: HTMLElement): any => {\n    const z = window.getComputedStyle(e).getPropertyValue(\"z-index\");\n\n    const zNumber = +z;\n    if (!Number.isNaN(zNumber)) {\n      results.push(zNumber);\n    }\n    if (e.parentElement) {\n      walker(e.parentElement);\n    }\n  };\n  walker(e);\n  return results.reverse();\n};\n","import React from \"react\";\nimport usePrevious from \"react-use/lib/usePrevious\";\n\nconst hideInputStyle = {\n  display: \"none\",\n};\nconst compareTwoState = (prev: any, next: any) => {\n  return prev === next;\n};\ntype InputValue = string | number | readonly string[] | undefined;\nexport type Converter<T> = {\n  encode: (value: InputValue) => T;\n  decode: (value: T) => InputValue;\n};\nconst passThroughConverter: Converter<any> = {\n  encode: (value) => value,\n  decode: (value) => value,\n};\nconst isMutableRefObject = <T extends any>(ref: React.Ref<T>): ref is React.MutableRefObject<T> => {\n  if (!ref) {\n    return false;\n  }\n  return \"current\" in ref;\n};\nexport const useMergedRef = <T extends any>(...refs: (React.ForwardedRef<T> | undefined)[]) => {\n  const ref = React.useCallback(\n    (node: T) => {\n      for (const ref of refs) {\n        if (!ref) {\n          continue;\n        }\n        // LegacyRef\n        if (typeof ref === \"string\") {\n          throw new Error(\"LegacyRef is not supported\");\n        }\n        if (typeof ref === \"function\") {\n          ref(node);\n          continue;\n        }\n        if (isMutableRefObject(ref)) {\n          ref.current = node;\n          continue;\n        }\n        if (ref && \"value\" in ref) {\n          ref.value = node;\n          continue;\n        }\n      }\n    },\n    [refs],\n  );\n  return ref;\n};\nexport const useControlledInputState = <S extends any, C extends Converter<S> = Converter<S>>(\n  {\n    value,\n    defaultValue,\n    onChange,\n    ref: forwardedRef,\n    ...props\n  }: React.InputHTMLAttributes<HTMLInputElement> & {\n    ref?: React.ForwardedRef<HTMLInputElement>;\n  },\n  convert: C = passThroughConverter as C,\n  areEqual: (a: S, b: S) => boolean = compareTwoState,\n) => {\n  const [currentValue, setCurrentValue] = React.useState<S>(() => {\n    return convert.encode(value || defaultValue);\n  });\n  const prevValue = usePrevious(value);\n  React.useLayoutEffect(() => {\n    if (typeof value === \"undefined\") {\n      return;\n    }\n    if (!prevValue) {\n      return;\n    }\n    const convertedValue = convert.encode(value);\n    if (value === prevValue) {\n      return;\n    }\n    if (areEqual(convertedValue, currentValue)) {\n      return;\n    }\n    setCurrentValue(convertedValue);\n  }, [value, currentValue]);\n  const localRef = React.useRef<HTMLInputElement>(null);\n  const convertedCurrentValue = React.useMemo(() => {\n    return convert.decode(currentValue);\n  }, [currentValue]);\n  const convertedPrevValue = usePrevious(convertedCurrentValue);\n  React.useEffect(() => {\n    const input = localRef.current;\n    if (!onChange || !input) {\n      return;\n    }\n    if (convertedPrevValue === convertedCurrentValue || !convertedPrevValue) {\n      return;\n    }\n    const changedValue = convertedCurrentValue?.toString() || \"\";\n    const changeEvent = new Event(\"change\", { bubbles: true });\n    input.setAttribute(\"value\", changedValue);\n    input.dispatchEvent(changeEvent);\n  }, [convertedCurrentValue, localRef]);\n  const ref = useMergedRef<any>(forwardedRef, localRef);\n  return [\n    currentValue,\n    setCurrentValue,\n    {\n      ...props,\n      onChange,\n      ref,\n      style: hideInputStyle,\n      readOnly: true,\n    },\n  ] as const;\n};\n","import * as React from \"react\";\nimport { usePopup } from \"../hooks/usePopup\";\nimport classes from \"./Dialog.module.css\";\nimport { Portal } from \"./Portal\";\nimport { useMergedRef } from \"../hooks/useControlledInputState\";\n\nexport const Dialog = React.memo(\n  React.forwardRef<\n    HTMLDialogElement,\n    React.JSX.IntrinsicElements[\"dialog\"] & {\n      modal?: boolean;\n    }\n  >(({ onClose, modal = true, open, ...props }, ref) => {\n    const [baseRef, bodyRef] = usePopup({ onClose: onClose ?? (() => {}) });\n    const refLocal = React.useRef<HTMLDialogElement>(null);\n    const $ref = useMergedRef(ref, refLocal);\n    const Wrapper = modal ? React.Fragment : Portal;\n    React.useEffect(() => {\n      const dialog = refLocal.current;\n      if (!dialog) {\n        return;\n      }\n      if (open) {\n        modal ? dialog.showModal() : dialog.show();\n      } else {\n        dialog.close();\n      }\n    }, [open, modal]);\n    const handleClose: React.ReactEventHandler<HTMLDialogElement> = React.useCallback(\n      (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (onClose) {\n          onClose(e);\n        }\n      },\n      [onClose],\n    );\n    const backdrop = <div ref={baseRef} className={classes.backdrop}></div>;\n    const content = (\n      <div className={classes.body} data-role=\"dialog-body\" ref={bodyRef}>\n        {props.children}\n      </div>\n    );\n    return (\n      <Wrapper>\n        <dialog\n          className={classes.dialog}\n          {...props}\n          open={modal ? undefined : open}\n          ref={$ref}\n          onClose={handleClose}\n          data-role={modal ? \"modal\" : \"dialog-body\"}\n        >\n          {open && (\n            <>\n              {backdrop}\n              {content}\n            </>\n          )}\n        </dialog>\n      </Wrapper>\n    );\n  }),\n);\nDialog.displayName = \"Dialog\";\n\nexport const DialogFooter: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\n  return <footer className={classes.dialogFooter}>{children}</footer>;\n};\n","import * as React from \"react\";\nimport { Dialog } from \"../Dialog\";\nexport type PopupLayoutProps = React.PropsWithChildren<{\n  variant?: \"alert\" | \"drawer\" | string;\n  potal?: boolean;\n  animationName?: string;\n  direction?: \"ltr\" | \"rtl\" | \"ttb\" | \"btt\";\n}> &\n  React.ComponentPropsWithRef<typeof Dialog>;\nexport const PopupLayout = React.memo(\n  ({ potal, open = true, onClose, onCancel, children, variant, animationName, direction = \"btt\" }: PopupLayoutProps) => {\n    return (\n      <Dialog\n        onClose={onClose}\n        onCancel={onCancel}\n        open={open}\n        modal={false}\n        data-variant={variant}\n        data-animation={animationName}\n        data-direction={direction}\n      >\n        {children}\n      </Dialog>\n    );\n  },\n);\nPopupLayout.displayName = \"PopupLayout\";\n","import * as React from \"react\";\nimport { PopupLayout } from \"./parts/PopupLayout\";\nimport classNames from \"./Drawer.module.css\";\nexport const Drawer: React.FC<\n  React.PropsWithChildren<React.ComponentProps<typeof PopupLayout>> & {\n    header?: React.ReactNode;\n  }\n> = ({ direction, open = true, onClose, header, children, potal = true }) => {\n  return (\n    <PopupLayout open={open} onClose={onClose} potal={potal} variant=\"drawer\" direction={direction}>\n      {header}\n      <section className={classNames.content}>{children}</section>\n    </PopupLayout>\n  );\n};\nDrawer.displayName = \"Drawer\";\n","import * as React from \"react\";\nimport style from \"./Text.module.css\";\nexport const Text: React.FC<\n  React.PropsWithChildren<{\n    ruby?: string;\n  }>\n> = ({ ruby, children }) => {\n  return (\n    <span className={style.text}>\n      {ruby ? (\n        <ruby>\n          {children}\n          <rt>{ruby}</rt>\n        </ruby>\n      ) : (\n        children\n      )}\n    </span>\n  );\n};\nText.displayName = \"Text\";\n","import * as React from \"react\";\nimport { Text } from \"../blocks/Text\";\nimport { Input } from \"./Input\";\nimport style from \"./input.module.css\";\nexport const EditableLabel: React.FC<React.ComponentPropsWithoutRef<typeof Input>> = ({ ...props }) => {\n  const [active, setActive] = React.useState(false);\n  const focus = React.useCallback(() => {\n    setActive(true);\n  }, []);\n  const blur = React.useCallback(() => {\n    setActive(false);\n  }, []);\n  const refCallback: React.RefCallback<HTMLInputElement> = (ref) => {\n    if (ref instanceof HTMLInputElement) {\n      ref.focus();\n    }\n  };\n  return (\n    <>\n      <input\n        {...props}\n        className={style.editablelabel}\n        autoFocus\n        ref={refCallback}\n        onBlur={blur}\n        type={\"text\"}\n        style={{ display: active ? \"block\" : \"none\" }}\n      />\n      {!active && (\n        <span onClick={focus}>\n          <Text>{props.value ?? props.defaultValue}</Text>\n        </span>\n      )}\n    </>\n  );\n};\nEditableLabel.displayName = \"EditableLabel\";\n","import * as React from \"react\";\nimport { usePrevious } from \"react-use\";\nimport style from \"./NativeSortable.module.css\";\ntype IdentifiedItem<T> = {\n  id: string;\n  value: T;\n};\nconst uniqueId = () => {\n  return Math.random().toString(36).substring(2);\n};\nconst changeEventEmitter = <T extends any[], V extends IdentifiedItem<T[number]>>({\n  value,\n  onChange,\n}: {\n  value: T;\n  onChange: (value: T) => void;\n}): [V[], React.Dispatch<React.SetStateAction<V[]>>] => {\n  const [items, setItems] = React.useState<V[]>(() => {\n    const source = value ?? [];\n    return source.map((value) => ({ value, id: uniqueId() }) as V);\n  });\n  const prev = usePrevious(items);\n  const callback = React.useRef(onChange);\n  callback.current = onChange;\n  React.useEffect(() => {\n    if (!prev) {\n      return;\n    }\n    if (!callback.current) {\n      return;\n    }\n    const nextItems = items.map((item) => item.value);\n    callback.current(nextItems as T);\n  }, [items]);\n\n  const prevValue = usePrevious(value);\n  React.useEffect(() => {\n    if (!prevValue || !value) {\n      return;\n    }\n    const nextValue = value;\n    setItems((prev) => {\n      const current = prev.map((item) => item.value);\n      const sameLength = current.length === nextValue.length;\n      const areEqual = sameLength && nextValue.every((p, i) => p === current[i]);\n      if (areEqual) {\n        return prev;\n      }\n      // もしも同じ長さなら、値は編集されたものとして更新する\n      const weakIdMap = new WeakMap(prev.map((p) => [p.value, p]));\n      const changedItemIndexes = nextValue.map((p, i) => (weakIdMap.has(p) ? -1 : i)).filter((i) => i !== -1);\n\n      if (sameLength) {\n        return prev.map((current, i) => {\n          if (changedItemIndexes.includes(i)) {\n            return { ...current, value: nextValue[i] };\n          }\n          return current;\n        });\n      }\n      // もしも長さが違うなら、新しい項目を追加する\n      return nextValue.map((after) => {\n        const before = weakIdMap.get(after);\n        if (before?.value) {\n          return before;\n        }\n        return { value: after, id: uniqueId() } as V;\n      });\n    });\n  }, [value, setItems]);\n\n  return [items, setItems];\n};\nconst arrayMove = <T extends any>(array: T[], from: number, to: number) => {\n  const result = [...array];\n  const [removed] = result.splice(from, 1);\n  result.splice(to, 0, removed);\n  return result;\n};\n\nexport const NativeSortable = <T extends {}>({\n  items,\n  onChange,\n  children,\n  controlAs,\n}: {\n  items: T[];\n  onChange: (next: T[]) => void;\n  children: React.ReactNode;\n  controlAs?: React.ComponentType<SortableItemProps>;\n}) => {\n  const [itemsWithIds, setItemsWithIds] = changeEventEmitter<T[], IdentifiedItem<T>>({\n    value: items,\n    onChange,\n  });\n  const elementRefMap = React.useRef<WeakMap<HTMLElement, string>>(new WeakMap([]));\n  const [draggingId, setDraggingId] = React.useState<string>();\n  const [draggingOverId, setDraggingOverId] = React.useState<string>();\n  const draggingData = {\n    draggingId,\n    draggingOverId,\n  };\n  const draggingDataRef = React.useRef<{ draggingId?: string; draggingOverId?: string }>(draggingData);\n  draggingDataRef.current = draggingData;\n\n  const onEnd = React.useCallback((source: string) => {\n    const { draggingId, draggingOverId } = draggingDataRef.current;\n    if (draggingOverId === source) {\n      return;\n    }\n    // Swap two items\n    setItemsWithIds((prev) => {\n      const sourceIndex = prev.findIndex((item) => item.id === source);\n      const targetIndex = prev.findIndex((item) => item.id === draggingOverId);\n      const swapped = arrayMove(prev, sourceIndex, targetIndex);\n      return swapped;\n    });\n    // Blur the active item\n    setDraggingId(undefined);\n    setDraggingOverId(undefined);\n  }, []);\n  const observe = React.useCallback((id: string, element: HTMLElement) => {\n    elementRefMap.current.set(element, id);\n    return () => {\n      elementRefMap.current.delete(element);\n    };\n  }, []);\n  const itemIds = itemsWithIds.map((item) => item.id);\n  const Item = controlAs ?? SortableItem;\n  return (\n    <SortableContext.Provider\n      value={{\n        observe,\n        items: itemIds,\n        draggingId,\n        setDraggingId,\n        draggingOverId,\n        setDraggingOverId,\n        end: onEnd,\n      }}\n    >\n      {React.Children.map(children, (child, index) => {\n        const id = itemIds[index];\n        return (\n          <Item key={id} id={id}>\n            {child}\n          </Item>\n        );\n      })}\n    </SortableContext.Provider>\n  );\n};\nconst clx = (...args: any[]) => {\n  return args.filter(Boolean).join(\" \");\n};\nexport type SortableItemProps = {\n  id: string;\n  className?: string;\n  children: React.ReactNode;\n};\nconst SortableItem: React.FC<SortableItemProps> = ({ id, children, className }) => {\n  const { containerRef, listeners } = useSortable<HTMLDivElement, HTMLDivElement>(id);\n\n  return (\n    <div className={clx(style.sortableItem, className)} ref={containerRef}>\n      <div className={style.sortableItemHandle} {...listeners}></div>\n      <div className={style.sortableItemBody}>{children}</div>\n    </div>\n  );\n};\nNativeSortable.SortableItem = SortableItem;\n\ntype SortableContextValue = {\n  items: string[];\n  draggingId?: string;\n  setDraggingId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  draggingOverId?: string;\n  setDraggingOverId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  end: (itemId: string) => void;\n  observe: (id: string, element: HTMLElement) => () => void;\n};\nconst SortableContext = React.createContext<SortableContextValue>({\n  items: [],\n  setDraggingId: () => {},\n  setDraggingOverId: () => {},\n  end: () => {},\n  observe: () => () => {},\n});\nexport const useSortable = <CE extends HTMLElement, HE extends HTMLElement>(itemId: string) => {\n  const containerRef = React.useRef<CE>(null);\n  const handleRef = React.useRef<HE>(null);\n  const { setDraggingId, setDraggingOverId, end, observe } = React.useContext(SortableContext);\n  React.useEffect(() => {\n    const current = containerRef.current;\n    const handle = handleRef.current;\n    if (!current || !handle) {\n      return;\n    }\n    const disconnect = observe(itemId, current);\n    current.setAttribute(\"draggable\", \"true\");\n    current.setAttribute(\"data-draggable-id\", itemId);\n    const onDragEnter = () => {\n      setDraggingOverId(itemId);\n    };\n    let draggingOverId: string | undefined;\n    const onDragStart = (event: DragEvent) => {\n      if (draggingOverId) {\n        return;\n      }\n      event.stopPropagation();\n      event.preventDefault();\n      if (event.dataTransfer) {\n        event.dataTransfer.effectAllowed = \"move\";\n      }\n      setDraggingId(itemId);\n    };\n    const onDragEnd = (e: DragEvent) => {\n      end(itemId);\n      return false;\n    };\n    const onDragOver = (e: DragEvent) => {\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      if (e.dataTransfer) {\n        e.dataTransfer.dropEffect = \"move\";\n      }\n      return false;\n    };\n    const handleDrop = (e: DragEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n      return false;\n    };\n    const captureTarget = (e: PointerEvent) => {\n      if (e.target === handle) {\n        draggingOverId = itemId;\n        return;\n      }\n      return false;\n    };\n    current.addEventListener(\"pointerdown\", captureTarget);\n    current.addEventListener(\"dragstart\", onDragStart);\n    current.addEventListener(\"dragover\", onDragOver);\n    current.addEventListener(\"dragend\", onDragEnd);\n    current.addEventListener(\"dragenter\", onDragEnter);\n    current.addEventListener(\"drop\", handleDrop, false);\n    return () => {\n      current.removeEventListener(\"pointerdown\", captureTarget);\n      current.removeEventListener(\"dragenter\", onDragEnter);\n      current.removeEventListener(\"dragover\", onDragOver);\n      current.removeEventListener(\"dragstart\", onDragStart);\n      current.removeEventListener(\"dragend\", onDragEnd);\n      current.removeEventListener(\"drop\", handleDrop);\n      disconnect();\n    };\n  }, [itemId]);\n  return {\n    containerRef,\n    listeners: {\n      ref: handleRef,\n    },\n  };\n};\n\nNativeSortable.useSortable = useSortable;\n","import * as React from \"react\";\nimport { Text } from \"../blocks/Text\";\nimport style from \"./TabNav.module.css\";\nimport { NativeSortable, SortableItemProps, useSortable } from \"../controls/NativeSortable\";\ntype Item = { key: string; value: string; icon?: React.ReactNode };\nexport const TabNav: React.FC<\n  React.PropsWithChildren<{\n    defaultValue?: string;\n    value?: string;\n    onChange: (nextKey: string) => void;\n    setItems: React.Dispatch<React.SetStateAction<Item[]>>;\n    items: Item[];\n    itemWrapper?: React.ComponentType<React.PropsWithChildren<{}>>;\n  }>\n> = ({ itemWrapper: Wrapper = Text, value, onChange, setItems, items, defaultValue }) => {\n  const [selectedTab, selectTab] = React.useState(value ?? defaultValue);\n  React.useEffect(() => {\n    if (typeof value !== \"string\") {\n      return;\n    }\n    if (value !== selectedTab) {\n      selectTab(value);\n    }\n  }, [selectedTab, value]);\n  const handleClose: React.ComponentProps<typeof SortableItem>[\"onRequestClose\"] = React.useCallback((key: string) => {\n    setItems((prev) => {\n      return prev.filter(({ key: itemKey }) => itemKey !== key);\n    });\n  }, []);\n  const handleSelect: React.ComponentProps<typeof SortableItem>[\"onSelect\"] = React.useCallback(\n    (e) => {\n      if (!(e.currentTarget instanceof HTMLDivElement)) {\n        return;\n      }\n      const id = e.currentTarget.dataset.id;\n      if (!id) {\n        return;\n      }\n      onChange(id);\n    },\n    [onChange],\n  );\n  return (\n    <nav className={style.tabnav}>\n      <NativeSortable items={items} onChange={setItems} controlAs={SortableItemControl}>\n        {items.map((item) => (\n          <SortableItem key={item.key} item={item} onSelect={handleSelect} selected={selectedTab} onRequestClose={handleClose}>\n            <Wrapper>{item.value}</Wrapper>\n          </SortableItem>\n        ))}\n      </NativeSortable>\n    </nav>\n  );\n};\nTabNav.displayName = \"TabNav\";\nconst SortableItemControl: React.FC<SortableItemProps> = ({ children, id }) => {\n  const { containerRef, listeners } = useSortable<HTMLDivElement, HTMLDivElement>(id);\n  const childrenWithListeners = React.Children.map(children, (child) => {\n    if (React.isValidElement(child)) {\n      return React.cloneElement(child, listeners);\n    }\n    return child;\n  });\n  return (\n    <div ref={containerRef} className={style.sortableItemControl}>\n      {childrenWithListeners}\n    </div>\n  );\n};\nconst SortableItem = React.forwardRef<\n  HTMLDivElement,\n  React.PropsWithChildren<{\n    item: Item;\n    onSelect: React.MouseEventHandler<HTMLDivElement>;\n    selected?: string;\n    onRequestClose?: (key: string) => void;\n    closeMark?: React.ReactNode;\n  }>\n>(({ selected, item, children, onSelect, onRequestClose, closeMark }, ref) => {\n  const handleClose: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      onRequestClose && onRequestClose(item.key);\n    },\n    [onRequestClose],\n  );\n  return (\n    <div className={style.sortableItem} data-id={item.key} aria-selected={selected === item.key} onClick={onSelect}>\n      {onRequestClose ? (\n        <button type=\"button\" className={style.deleteButton} value={`close ${item.value} tab`} onClick={handleClose}>\n          {closeMark ?? \"×\"}\n        </button>\n      ) : (\n        <span />\n      )}\n      <div className={style.sortableItemBody} ref={ref}>\n        <div></div>\n        {item.icon}\n        {children}\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useCallback, useState } from \"react\";\nimport style from \"./TabBar.module.css\";\ntype Item = { key: string; icon?: React.ReactNode; value: string };\ntype TabItemSelectHandler = (item: Item, index: number) => void;\nexport const TabBar: React.FC<{\n  items: Item[];\n  defaultSelected?: number;\n  onSelect: TabItemSelectHandler;\n  tabIndex?: number;\n}> = memo(({ items, onSelect, tabIndex, defaultSelected }) => {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(() => defaultSelected ?? 0);\n  const handleSelect: TabItemSelectHandler = useCallback(\n    (item, index) => {\n      onSelect(item, index);\n      setSelectedItemIndex(index);\n    },\n    [onSelect],\n  );\n  return (\n    <nav className={style.tabbar} tabIndex={tabIndex}>\n      <ul className={style.tabs}>\n        {items.map((item, i) => {\n          return (\n            <TabItem key={i} item={item} tabIndex={i} onSelect={handleSelect} selected={i === selectedItemIndex}></TabItem>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n});\nTabBar.displayName = \"TabBar\";\nconst TabItem: React.FC<{\n  item: Item;\n  onSelect: TabItemSelectHandler;\n  tabIndex: number;\n  selected: boolean;\n}> = memo(({ tabIndex, item, onSelect, selected }) => {\n  const handleClick: React.MouseEventHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      onSelect(item, tabIndex);\n    },\n    [onSelect, item, tabIndex],\n  );\n  return (\n    <li className={style.tabitem} data-selected={selected}>\n      <a tabIndex={tabIndex} onClick={handleClick}>\n        <div className={style.tabitemIcon}>{item.icon}</div>\n        <span className={style.tabitemLabel}>{item.value}</span>\n      </a>\n    </li>\n  );\n});\n","import * as React from \"react\";\nimport classes from \"./ChevronMark.module.css\";\nexport const ChevronMark: React.FC<{\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\n  size?: number;\n}> = ({ direction, size }) => {\n  const style = React.useMemo(() => {\n    const defaultSize = \"1em\";\n    return {\n      width: size ?? defaultSize,\n      height: size ?? defaultSize,\n    };\n  }, [size]);\n  return (\n    <i className={classes.mark} data-direction={direction ?? \"down\"} role=\"decoration\" style={style}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <polyline points=\"6 9 12 15 18 9\" />\n      </svg>\n    </i>\n  );\n};\nChevronMark.displayName = \"ChevronMark\";\n","import * as React from \"react\";\nexport const SearchIcon = ({ size, className }: { size: number; className?: string }) => {\n  return (\n    <svg\n      className={className}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 512 512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3zM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8z\"></path>\n    </svg>\n  );\n};\nSearchIcon.displayName = \"SearchIcon\";\n","import * as React from \"react\";\nimport { usePrevious } from \"react-use\";\nimport { ChevronMark } from \"../blocks/ChevronMark\";\nimport { SearchIcon } from \"../blocks/SearchIcon\";\nimport style from \"./Toolbar.module.css\";\ntype Variants = \"combobox\" | \"noborder\" | string;\nconst PushButton = React.forwardRef<\n  HTMLButtonElement | HTMLAnchorElement | HTMLInputElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement> & { variant?: Variants; as?: React.ElementType<any> }\n>(({ children, variant, ...props }, ref) => {\n  const Element = props.as ?? \"button\";\n  return (\n    <Element className={style.button} data-variant={variant} {...props} ref={ref}>\n      {children}\n      {variant === \"combobox\" && (\n        <i className={style.pullDownMark} role=\"none\">\n          <ChevronMark></ChevronMark>\n        </i>\n      )}\n    </Element>\n  );\n});\nPushButton.displayName = \"PushButton\";\n\ntype NavigationButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  label?: React.ReactNode;\n};\n\nconst NavigationButton = React.forwardRef<HTMLButtonElement, NavigationButtonProps & { direction: \"back\" | \"forward\" }>(\n  ({ direction, children, className, type, ...restProps }, ref) => {\n    return (\n      <button\n        {...restProps}\n        type={type ?? \"button\"}\n        className={style.button}\n        data-variant=\"navigation\"\n        data-direction={direction}\n        ref={ref}\n      >\n        <span className={style.navigationButtonIcon}>\n          <ChevronMark size={16} direction={direction === \"back\" ? \"left\" : \"right\"} />\n        </span>\n        {children}\n      </button>\n    );\n  }\n);\nNavigationButton.displayName = \"NavigationButton\";\n\nconst BackButton = React.forwardRef<HTMLButtonElement, NavigationButtonProps>((props, ref) => {\n  return <NavigationButton {...props} direction=\"back\" ref={ref} />;\n});\nBackButton.displayName = \"BackButton\";\n\nconst ForwardButton = React.forwardRef<HTMLButtonElement, NavigationButtonProps>((props, ref) => {\n  return <NavigationButton {...props} direction=\"forward\" ref={ref} />;\n});\nForwardButton.displayName = \"ForwardButton\";\n\nconst PullDown = React.forwardRef<HTMLSelectElement, React.SelectHTMLAttributes<HTMLSelectElement> & { variant?: Variants }>(\n  ({ variant, ...props }, ref) => {\n    return (\n      <div className={style.button} data-variant={variant}>\n        <select {...props} ref={ref}>\n          {props.children}\n        </select>\n        <div role=\"none\" className={style.pullDownMark}>\n          <ChevronMark></ChevronMark>\n        </div>\n      </div>\n    );\n  }\n);\nPullDown.displayName = \"PullDown\";\n\nconst PopUpButton: React.FC<React.ComponentPropsWithRef<typeof PullDown>> = (props) => {\n  return <PullDown {...props} variant=\"popup\"></PullDown>;\n};\nPopUpButton.displayName = \"PopUpButton\";\nconst ComboBox: React.FC<React.ComponentPropsWithRef<typeof PullDown>> = (props) => {\n  return <PullDown {...props} variant={[\"combobox\", props.variant].join(\" \")}></PullDown>;\n};\nComboBox.displayName = \"ComboBox\";\n\nconst InputField = React.memo(\n  React.forwardRef<\n    HTMLInputElement,\n    React.InputHTMLAttributes<HTMLInputElement> & {\n      variant?: string;\n    }\n  >(({ children, variant, ...props }, ref) => {\n    return (\n      <input className={style.input} type={props.type ?? \"text\"} {...props} ref={ref} data-vatiant={variant}>\n        {children}\n      </input>\n    );\n  })\n);\nInputField.displayName = \"InputField\";\nconst SearchField: React.FC<React.ComponentPropsWithRef<typeof InputField>> = (props) => {\n  return (\n    <div className={style.withIcon}>\n      <i className={style.icon}>\n        <SearchIcon size={17} />\n      </i>\n      <InputField {...props} type=\"search\" placeholder={props.placeholder ?? \"Search...\"} />\n    </div>\n  );\n};\nSearchField.displayName = \"SearchField\";\nconst Title: React.FC<\n  React.PropsWithChildren<{\n    title?: string;\n    subTitle?: string;\n  }>\n> = React.memo(({ title, subTitle, children }) => {\n  return (\n    <div className={style.title}>\n      {children}\n      {title && <strong>{title}</strong>}\n      {subTitle && <small>{subTitle}</small>}\n    </div>\n  );\n});\nTitle.displayName = \"Title\";\n\nconst Body = React.forwardRef<HTMLDivElement, React.PropsWithChildren<React.JSX.IntrinsicElements[\"div\"]>>(\n  ({ children, ...props }, ref) => {\n    return (\n      <div className={style.body} {...props} ref={ref}>\n        {React.Children.map(children, (child, i) => {\n          return (\n            <div className={style.child} key={i}>\n              {child}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\nBody.displayName = \"Body\";\n\nconst Separator = React.memo(() => <hr className={style.separator} role=\"separator\" />);\n\nconst Segment: React.FC<\n  React.PropsWithChildren<{\n    onClick: (index: number) => void;\n    index: number;\n    isActive?: boolean;\n  }>\n> = React.memo(({ onClick, index, isActive, children }) => {\n  const memorizedOnClick = React.useCallback(() => {\n    onClick(index);\n  }, [index, onClick]);\n  return (\n    <div className={style.segment} data-is-active={isActive} onClick={memorizedOnClick}>\n      {children}\n    </div>\n  );\n});\nSegment.displayName = \"Segment\";\nconst SegmentedControl = React.memo(\n  ({\n    items,\n    defaultSelected = 0,\n    onSelect,\n    children,\n  }: React.PropsWithChildren<{\n    items?: React.ReactNode[];\n    defaultSelected?: number;\n    onSelect?: (item: number) => void;\n    children?: React.ReactNode;\n  }>) => {\n    const [selectedIndex, setSelectedIndex] = React.useState(defaultSelected);\n    const prev = usePrevious(selectedIndex);\n    React.useEffect(() => {\n      if (typeof prev === \"undefined\" || !onSelect || prev === selectedIndex) {\n        return;\n      }\n      onSelect(selectedIndex);\n    }, [selectedIndex]);\n    const mergedItems = React.useMemo(() => {\n      if (!children) {\n        return items ?? [];\n      }\n      return React.Children.toArray(children);\n    }, [children, items]);\n    return (\n      <div className={style.segmentControl}>\n        {mergedItems.map((item, i) => {\n          return (\n            <Segment key={i} index={i} onClick={setSelectedIndex} isActive={selectedIndex === i}>\n              {item}\n            </Segment>\n          );\n        })}\n      </div>\n    );\n  }\n);\nSegmentedControl.displayName = \"SegmentedControl\";\nconst Spacer: React.FC = () => {\n  return <div></div>;\n};\nSpacer.displayName = \"Spacer\";\nexport const Toolbar = ({\n  children,\n  style: css,\n}: React.PropsWithChildren<{\n  style?: React.CSSProperties;\n}>) => {\n  return (\n    <div className={style.toolbar} role=\"toolbar\" style={css}>\n      {children}\n    </div>\n  );\n};\nToolbar.displayName = \"Toolbar\";\n\nexport const BarItems = {\n  SegmentedControl,\n  Toolbar,\n  SearchField,\n  InputField,\n  Separator,\n  PushButton,\n  PullDown,\n  Title,\n  Body,\n  Segment,\n  ComboBox,\n  PopUpButton,\n  Spacer,\n  BackButton,\n  ForwardButton,\n};\nToolbar.SegmentedControl = SegmentedControl;\nToolbar.Toolbar = Toolbar;\nToolbar.SearchField = SearchField;\nToolbar.InputField = InputField;\nToolbar.Separator = Separator;\nToolbar.PushButton = PushButton;\nToolbar.PullDown = PullDown;\nToolbar.Title = Title;\nToolbar.Body = Body;\nToolbar.Segment = Segment;\nToolbar.ComboBox = ComboBox;\nToolbar.PopUpButton = PopUpButton;\nToolbar.Spacer = Spacer;\nToolbar.BackButton = BackButton;\nToolbar.ForwardButton = ForwardButton;\n","import { FC, memo, useMemo } from \"react\";\nimport style from \"./Icon.module.css\";\nimport React from \"react\";\nexport const Icon: FC<{\n  src: string;\n  width?: number | string;\n  height?: number | string;\n  size?: number;\n}> = memo(({ src, width, height, size }) => {\n  const postfix = useMemo(() => {\n    const matches = src.match(/-([a-zA-Z]+)$/);\n    if (!matches) {\n      return null;\n    }\n    return matches[1];\n  }, [src]);\n  return (\n    <i\n      data-fa\n      className={style.icon}\n      data-icon={src}\n      data-postfix={postfix}\n      style={{\n        width,\n        height,\n        fontSize: size ?? width,\n      }}\n    ></i>\n  );\n});\nIcon.displayName = \"Icon\";\n\nconst IconBase = memo(({ children, size }: { children: React.ReactNode; size?: number }) => {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 256 256\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      {children}\n    </svg>\n  );\n});\n\nexport const CloseIcon: FC<{\n  size?: number;\n}> = memo(({ size }) => {\n  return (\n    <IconBase size={size}>\n      <path d=\"M203.6,73.72c5.84-5.88,5.84-15.42,0-21.31-5.84-5.88-15.3-5.88-21.14,0l-54.47,53.65-54.47-53.05c-5.84-5.88-15.3-5.88-21.14,0-5.84,5.88-5.84,15.42,0,21.31l54.49,53.03-54.49,54.93c-5.84,5.88-5.84,15.42,0,21.31,5.84,5.88,15.3,5.88,21.14,0l54.47-54.95,54.49,54.93c5.84,5.88,15.3,5.88,21.14,0,5.84-5.88,5.84-15.42,0-21.31l-54.51-54.91,54.49-53.63Z\" />\n    </IconBase>\n  );\n});\nexport const IndeterminateIcon: FC<{\n  size?: number;\n}> = memo(({ size }) => {\n  return (\n    <IconBase size={size}>\n      <rect x=\"29.34\" y=\"113.16\" width=\"198.32\" height=\"30.68\" rx=\"15.34\" ry=\"15.34\" />\n    </IconBase>\n  );\n});\nexport const Checkmark = ({ size }: { size?: number }) => {\n  return (\n    <IconBase size={size}>\n      <path d=\"M231.6,56.14c6,6,6,15.75,0,21.76l-122.96,122.96c-6,6-15.75,6-21.76,0l-61.48-61.48c-6-6-6-15.75,0-21.76,6-6,15.75-6,21.76,0l50.62,50.57,112.1-112.05c6-6,15.75-6,21.76,0h-.05Z\" />\n    </IconBase>\n  );\n};\nCheckmark.displayName = \"Checkmark\";\n","import * as React from \"react\";\nimport style from \"./Resizer.module.css\";\nimport { useObservePointer } from \"../hooks/usePointerObserver\";\nimport { ObservePointerCallback } from \"../hooks/pointer-utilities/ObservePointerCallback\";\nimport { useMeasure } from \"../hooks/useMeasure\";\nconst inRange = (val: number, amount: number) => {\n  return -amount < val && val < amount;\n};\nconst pack = (val: number, min: number, max: number) => {\n  // どちらか近い方に丸める\n  if (val < min) {\n    return min;\n  }\n  if (val > max) {\n    return max;\n  }\n  return (min + max) / 2;\n};\nexport type OnResize = (params: { x: number; y: number; width: number; height: number }, final: boolean) => void;\nexport const useResizer = (ref: React.RefObject<HTMLDivElement>, onResize: OnResize) => {\n  const [bound] = useMeasure(ref);\n  const hoverRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const elm = ref.current;\n    if (!elm) {\n      return;\n    }\n    const handleHover = (e: PointerEvent) => {\n      const isHover = e.type === \"pointerover\" || e.type === \"pointermove\";\n      const bound = elm.getBoundingClientRect();\n      const area = 12;\n      const x = e.pageX - bound.x;\n      const y = e.pageY - bound.y;\n      const edges = {\n        x: inRange(x, area),\n        y: inRange(y, area),\n        width: inRange(bound.width - x, area),\n        height: inRange(bound.height - y, area),\n      };\n\n      const isEdge = edges.x || edges.y || edges.width || edges.height;\n      if (isHover && isEdge) {\n        // ew-resize, ns-resize, nwse-resize, nesw-resize\n        const horizontal = edges.x ? \"w\" : edges.width ? \"e\" : \"\";\n        const vertical = edges.y ? \"n\" : edges.height ? \"s\" : \"\";\n\n        let cursor = \"auto\";\n\n        if (horizontal && vertical) {\n          const direction = vertical + horizontal;\n          cursor = direction === \"nw\" || direction === \"se\" ? \"nwse-resize\" : \"nesw-resize\";\n        } else if (horizontal) {\n          cursor = \"ew-resize\";\n        } else if (vertical) {\n          cursor = \"ns-resize\";\n        }\n        hoverRef.current = true;\n        elm.style.cursor = cursor;\n      } else {\n        hoverRef.current = false;\n        elm.style.cursor = \"auto\";\n      }\n    };\n    elm.addEventListener(\"pointerover\", handleHover);\n    window.addEventListener(\"pointermove\", handleHover);\n    elm.addEventListener(\"pointerout\", handleHover);\n    return () => {\n      elm.removeEventListener(\"pointerover\", handleHover);\n      window.addEventListener(\"pointermove\", handleHover);\n      elm.removeEventListener(\"pointerout\", handleHover);\n    };\n  }, [ref]);\n  const dragging = React.useRef<{\n    active: boolean;\n    x: number;\n    y: number;\n  }>({\n    active: false,\n    x: 0,\n    y: 0,\n  });\n\n  const handler: ObservePointerCallback = React.useCallback(\n    (e) => {\n      if (!bound) {\n        return;\n      }\n      if (!dragging.current.active && hoverRef.current) {\n        const x = e.pageX - bound.x;\n        const y = e.pageY - bound.y;\n        const originX = pack(1 - x / bound.width, 0, 1);\n        const originY = pack(1 - y / bound.height, 0, 1);\n        dragging.current = {\n          active: e.isFinal ? false : true,\n          x: originX,\n          y: originY,\n        };\n      }\n\n      if (!hoverRef.current && !dragging.current.active) {\n        return;\n      }\n      onResize(resize(e.deltaX, e.deltaY, dragging.current.x, dragging.current.y), e.isFinal);\n    },\n    [bound],\n  );\n  useObservePointer(ref, handler);\n  return;\n};\nexport const Resizer: React.FC<{\n  onResize: OnResize;\n  max?: number;\n  min?: number;\n  step?: number;\n  originX?: number;\n  originY?: number;\n  autoplace?: boolean;\n}> = ({ autoplace = true, onResize, originX, originY, max, min, step }) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const origin = React.useMemo(() => ({ x: originX ?? 0.5, y: originY ?? 0.5 }), [originX, originY]);\n  const handler: ObservePointerCallback = React.useCallback(\n    (e) => {\n      if (e.type === \"pointerdown\") {\n        return;\n      }\n      onResize(resize(e.deltaX, e.deltaY, origin.x, origin.y), e.isFinal);\n    },\n    [max, min, step, origin],\n  );\n  useObservePointer(ref, handler);\n  const position = React.useMemo(() => {\n    if (autoplace) {\n      // 0,0を原点としたカーソルの傾きでカーソルを変える\n      const angle = Math.atan2(origin.y, origin.x);\n      // 45度ごとに変える。\n      const cursors = [\"ew\", \"nwse\", \"ns\", \"nesw\", \"ew\", \"nwse\", \"ns\", \"nesw\"];\n      const index = Math.round(angle / (Math.PI / 4));\n\n      const cursor = `${cursors.at(index)}-resize`;\n      // -1 ~ 1の範囲を0 ~ 100%に変換\n      const top = (origin.x + 1) / 2;\n      const left = (origin.y + 1) / 2;\n      return {\n        top: `${top * 100}%`,\n        left: `${left * 100}%`,\n        cursor,\n        content: `${angle}`,\n      };\n    }\n    return {};\n  }, [autoplace, origin]);\n  return <div className={style.resizer} ref={ref} style={position}></div>;\n};\nResizer.displayName = \"Resizer\";\n\nexport const resize = (\n  deltaX: number,\n  deltaY: number,\n  originX: number,\n  originY: number,\n): { x: number; y: number; width: number; height: number } => {\n  // originは -1 ~ 1の範囲で、0,0が中心\n  // deltaX, deltaYは移動量\n  // x, yは左上の座標\n  const x = originX;\n  const y = originY;\n  const width = deltaX;\n  const height = deltaY;\n  return { x, y, width, height };\n};\n","import * as React from \"react\";\nimport { memo } from \"react\";\nimport style from \"./Segment.module.css\";\n\nexport const Segment: React.FC<React.PropsWithChildren<{}>> = memo(({ children }) => {\n  return <div className={style.segment}>{children}</div>;\n});\n","import React, { useState, useCallback } from \"react\";\n\nexport const useToggle = (defaultOpen: boolean = false) => {\n  const [open, setOpen] = useState(defaultOpen);\n\n  const toggle = useCallback(() => {\n    setOpen((prev) => !prev);\n  }, []);\n\n  return [open, toggle, setOpen] as const;\n};\n","import React from \"react\";\nimport { FC, memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport classes from \"./SegmentedControl.module.css\";\nimport { Segment } from \"./Segment\";\nimport { useToggle } from \"../hooks/useToggle\";\n\nexport interface SegmentedControlProps {\n  items: React.ReactNode[];\n  selectedIndex?: number;\n  defaultSelected?: number;\n  onSelect?: (index: number) => void;\n  element?: React.FC<React.PropsWithChildren<React.ComponentProps<typeof Segment>>>;\n  // New: Enable external control and position tracking\n  controlled?: boolean;\n  onPositionChange?: (rect: {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n    // Also provides absolute positioning for advanced use cases\n    x?: number;\n    y?: number;\n    right?: number;\n    bottom?: number;\n  }) => void;\n  // New: Drag state callbacks\n  onDragStart?: (index: number) => void;\n  onDragEnd?: (index: number) => void;\n  onDragPreview?: (index: number) => void;\n}\n\n// Backward compatibility: Keep the old interface available\nexport interface LegacySegmentedControlProps {\n  items: React.ReactNode[];\n  defaultSelected?: number;\n  onSelect?: (item: number) => void;\n  element?: React.FC<React.PropsWithChildren<React.ComponentProps<typeof Segment>>>;\n}\n\nexport const SegmentedControl: FC<SegmentedControlProps> = memo(\n  ({\n    items,\n    selectedIndex: controlledIndex,\n    defaultSelected = 0,\n    onSelect,\n    element: Element = Segment,\n    controlled = false,\n    onPositionChange,\n    onDragStart,\n    onDragEnd,\n    onDragPreview,\n  }) => {\n    const [internalIndex, setInternalIndex] = useState(defaultSelected);\n    const [itemRect, setItemRect] = useState<Record<string, number>>({});\n    const ref = useRef<HTMLDivElement>(null);\n\n    // Drag state\n    const [isDragging, setIsDragging] = useState(false);\n    const [dragStartIndex, setDragStartIndex] = useState<number | null>(null);\n    const [previewIndex, setPreviewIndex] = useState<number | null>(null);\n\n    // Use controlled or internal state\n    const selectedIndex = controlled ? controlledIndex ?? defaultSelected : internalIndex;\n\n    // Use preview index during drag, otherwise use selected index\n    const displayIndex = isDragging && previewIndex !== null ? previewIndex : selectedIndex;\n\n    // Handle selection change\n    const handleIndexChange = useCallback(\n      (newIndex: number) => {\n        if (!controlled) {\n          setInternalIndex(newIndex);\n        }\n        onSelect?.(newIndex);\n      },\n      [controlled, onSelect],\n    );\n    const selectSegment: React.MouseEventHandler<HTMLButtonElement> = useCallback(\n      (e) => {\n        if (!(e.target instanceof HTMLButtonElement)) {\n          return;\n        }\n        const index = parseInt(e.target.dataset[\"index\"] ?? \"0\");\n        handleIndexChange(index);\n      },\n      [handleIndexChange],\n    );\n\n    // Drag handlers\n    const handleDragStart = useCallback(\n      (e: React.PointerEvent<HTMLButtonElement>) => {\n        if (!(e.target instanceof HTMLButtonElement)) return;\n\n        const index = parseInt(e.target.dataset[\"index\"] ?? \"0\");\n\n        // Only allow drag from currently selected segment\n        if (index !== selectedIndex) return;\n\n        setIsDragging(true);\n        setDragStartIndex(index);\n        setPreviewIndex(index);\n\n        // Notify external listeners\n        onDragStart?.(index);\n\n        // Capture pointer to track movement outside element\n        e.currentTarget.setPointerCapture(e.pointerId);\n      },\n      [selectedIndex, onDragStart],\n    );\n\n    const handleDragMove = useCallback(\n      (e: React.PointerEvent<HTMLButtonElement>) => {\n        if (!isDragging || !ref.current) return;\n\n        // Find which segment the pointer is over\n        const containerRect = ref.current.getBoundingClientRect();\n        const relativeX = e.clientX - containerRect.left;\n\n        const buttons = Array.from(ref.current.children).filter((child) =>\n          child.classList.contains(classes.segmentButton),\n        ) as HTMLElement[];\n\n        let targetIndex = dragStartIndex;\n\n        for (let i = 0; i < buttons.length; i++) {\n          const button = buttons[i];\n          const buttonRect = button.getBoundingClientRect();\n          const buttonRelativeLeft = buttonRect.left - containerRect.left;\n          const buttonRelativeRight = buttonRect.right - containerRect.left;\n\n          if (relativeX >= buttonRelativeLeft && relativeX <= buttonRelativeRight) {\n            targetIndex = i;\n            break;\n          }\n        }\n\n        if (targetIndex !== null && targetIndex !== previewIndex) {\n          setPreviewIndex(targetIndex);\n          // Notify external listeners about preview change\n          onDragPreview?.(targetIndex);\n        }\n      },\n      [isDragging, dragStartIndex, previewIndex, onDragPreview],\n    );\n\n    const handleDragEnd = useCallback(\n      (e: React.PointerEvent<HTMLButtonElement>) => {\n        if (!isDragging) return;\n\n        // Release pointer capture\n        e.currentTarget.releasePointerCapture(e.pointerId);\n\n        const finalIndex = previewIndex !== null ? previewIndex : selectedIndex;\n\n        // Apply the final selection if it changed\n        if (previewIndex !== null && previewIndex !== selectedIndex) {\n          handleIndexChange(previewIndex);\n        }\n\n        // Notify external listeners about drag end\n        onDragEnd?.(finalIndex);\n\n        // Reset drag state\n        setIsDragging(false);\n        setDragStartIndex(null);\n        setPreviewIndex(null);\n      },\n      [isDragging, previewIndex, selectedIndex, handleIndexChange, onDragEnd],\n    );\n\n    // Calculate indicator position and notify external listeners\n    const updateItemRect = useCallback(\n      (targetIndex: number) => {\n        if (!ref.current) {\n          return;\n        }\n\n        const children = Array.from(ref.current.children).filter((child) => child.classList.contains(classes.segmentButton));\n\n        if (children.length === 0 || targetIndex >= children.length) {\n          return;\n        }\n\n        const target = children[targetIndex] as HTMLElement;\n        const rect = target.getBoundingClientRect();\n        const containerRect = ref.current.getBoundingClientRect();\n\n        const relativeRect = {\n          top: rect.top - containerRect.top,\n          left: rect.left - containerRect.left,\n          width: rect.width,\n          height: rect.height,\n        };\n\n        setItemRect(relativeRect);\n\n        // Notify external listeners about position change\n        if (onPositionChange) {\n          onPositionChange({\n            ...relativeRect,\n            // Also provide absolute position for advanced use cases\n            x: rect.x,\n            y: rect.y,\n            right: rect.right,\n            bottom: rect.bottom,\n          });\n        }\n      },\n      [onPositionChange],\n    );\n\n    // Update position when display index changes\n    useEffect(() => {\n      updateItemRect(displayIndex);\n    }, [displayIndex, updateItemRect]);\n\n    // Update position on resize\n    useEffect(() => {\n      if (!ref.current) return;\n\n      const resizeObserver = new ResizeObserver(() => {\n        updateItemRect(displayIndex);\n      });\n\n      resizeObserver.observe(ref.current);\n\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }, [displayIndex, updateItemRect]);\n    const focus: React.PointerEventHandler<HTMLButtonElement> = useCallback(\n      (e) => {\n        if (e.target instanceof HTMLButtonElement) {\n          const isActive = e.target.dataset.index === displayIndex.toString();\n          if (!isActive) {\n            return;\n          }\n          setFocus(true);\n        }\n      },\n      [displayIndex],\n    );\n    const blur: React.PointerEventHandler<HTMLButtonElement> = useCallback(\n      (e) => {\n        if (e.target instanceof HTMLButtonElement) {\n          const isActive = e.target.dataset.index === displayIndex.toString();\n          if (!isActive) {\n            return;\n          }\n          setFocus(false);\n        }\n      },\n      [displayIndex],\n    );\n    const [focused, toggleFocus, setFocus] = useToggle(false);\n    return (\n      <div className={classes.segmentControl} ref={ref}>\n        {items.map((item, i) => {\n          return (\n            <SegmentButton\n              key={i}\n              index={i}\n              active={i === displayIndex}\n              onClick={selectSegment}\n              focus={focus}\n              blur={blur}\n              onPointerDown={handleDragStart}\n              onPointerMove={handleDragMove}\n              onPointerUp={handleDragEnd}\n              onPointerCancel={handleDragEnd}\n            >\n              <Element>{item}</Element>\n            </SegmentButton>\n          );\n        })}\n        {itemRect && itemRect.left !== undefined && (\n          <div\n            className={classes.indicator}\n            role=\"presentation\"\n            data-focus={focused}\n            style={{\n              transform: `translate(${itemRect.left}px, ${itemRect.top}px) scale(${focused ? 0.97 : 1})`,\n              width: itemRect.width,\n              height: itemRect.height,\n            }}\n          >\n            {items.at(displayIndex)}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\nSegmentedControl.displayName = \"SegmentedControl\";\n\nconst SegmentButton: FC<\n  React.PropsWithChildren<{\n    onClick?: React.MouseEventHandler<HTMLButtonElement>;\n    index?: number;\n    active: boolean;\n    focus: React.PointerEventHandler<HTMLButtonElement>;\n    blur: React.PointerEventHandler<HTMLButtonElement>;\n    onPointerDown?: React.PointerEventHandler<HTMLButtonElement>;\n    onPointerMove?: React.PointerEventHandler<HTMLButtonElement>;\n    onPointerUp?: React.PointerEventHandler<HTMLButtonElement>;\n    onPointerCancel?: React.PointerEventHandler<HTMLButtonElement>;\n  }>\n> = ({ children, index, active, onClick, focus, blur, onPointerDown, onPointerMove, onPointerUp, onPointerCancel }) => {\n  const handlePointerDown = useCallback(\n    (e: React.PointerEvent<HTMLButtonElement>) => {\n      focus(e);\n      onPointerDown?.(e);\n    },\n    [focus, onPointerDown],\n  );\n\n  const handlePointerUp = useCallback(\n    (e: React.PointerEvent<HTMLButtonElement>) => {\n      blur(e);\n      onPointerUp?.(e);\n    },\n    [blur, onPointerUp],\n  );\n\n  const handlePointerCancel = useCallback(\n    (e: React.PointerEvent<HTMLButtonElement>) => {\n      blur(e);\n      onPointerCancel?.(e);\n    },\n    [blur, onPointerCancel],\n  );\n\n  const handlePointerLeave = useCallback(\n    (e: React.PointerEvent<HTMLButtonElement>) => {\n      // Only blur if not dragging (pointer capture prevents leave during drag)\n      if (!e.currentTarget.hasPointerCapture(e.pointerId)) {\n        blur(e);\n      }\n    },\n    [blur],\n  );\n\n  return (\n    <button\n      onClick={onClick}\n      type=\"button\"\n      data-index={index}\n      data-active={active}\n      className={classes.segmentButton}\n      onPointerDown={handlePointerDown}\n      onPointerMove={onPointerMove}\n      onPointerUp={handlePointerUp}\n      onPointerCancel={handlePointerCancel}\n      onPointerLeave={handlePointerLeave}\n      style={{\n        touchAction: \"none\", // Prevent scrolling during drag\n      }}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, { forwardRef, HTMLAttributes, memo, createElement } from \"react\";\nimport style from \"./elements.module.css\";\nconst levelToHeadingType = {\n  1: \"h1\",\n  2: \"h2\",\n  3: \"h3\",\n  4: \"h4\",\n  5: \"h5\",\n  6: \"h6\",\n} as const;\n\ntype HeadingLevel = keyof typeof levelToHeadingType;\nexport const Heading = memo(\n  forwardRef<HTMLHeadingElement, HTMLAttributes<HTMLHeadingElement> & { level: HeadingLevel }>(\n    ({ level, children, ...props }, ref) => {\n      const type = levelToHeadingType[level] ?? \"h3\";\n      return createElement(\n        type,\n        {\n          ...props,\n          ref,\n          className: style.heading,\n        },\n        children,\n      );\n    },\n  ),\n);\nHeading.displayName = \"Heading\";\n\nexport const H1 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h1\"]>((props, ref) => (\n  <Heading level={1} {...props} ref={ref} />\n));\n\nexport const H2 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h2\"]>((props, ref) => (\n  <Heading level={2} {...props} ref={ref} />\n));\n\nexport const H3 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h3\"]>((props, ref) => (\n  <Heading level={3} {...props} ref={ref} />\n));\n\nexport const H4 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h4\"]>((props, ref) => (\n  <Heading level={4} {...props} ref={ref} />\n));\n\nexport const H5 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h5\"]>((props, ref) => (\n  <Heading level={5} {...props} ref={ref} />\n));\n\nexport const H6 = forwardRef<HTMLHeadingElement, React.JSX.IntrinsicElements[\"h6\"]>((props, ref) => (\n  <Heading level={6} {...props} ref={ref} />\n));\n","export const classNames = (...names: (string | boolean | undefined)[]) => {\n  return names.filter(Boolean).join(\" \");\n};\n","import { ButtonHTMLAttributes, useMemo } from \"react\";\nimport { forwardRef, memo } from \"react\";\nimport style from \"./Button.module.css\";\nimport React from \"react\";\nimport { classNames } from \"../utilities/classNames\";\nexport const Button = memo(\n  forwardRef<\n    HTMLButtonElement,\n    ButtonHTMLAttributes<HTMLButtonElement> & {\n      variant?: string;\n      size?: string;\n      quiet?: boolean;\n      rounded?: boolean;\n      \"data-variant\"?: string;\n\n      popovertarget?: string;\n      popovertargetaction?: string;\n    }\n  >(({ children, color, quiet, size, variant, rounded, ...props }, ref) => {\n    const dataVariant = useMemo(() => {\n      const items = [variant, size, rounded ? \"rounded\" : \"\", color, props[\"data-variant\"]].filter(Boolean);\n      return items.join(\" \").trim();\n    }, [variant, size, rounded, color]);\n\n    const className = classNames(style.button, props.className);\n    return (\n      <button {...props} ref={ref} className={className} data-variant={dataVariant}>\n        {children}\n      </button>\n    );\n  }),\n);\nButton.displayName = \"Button\";\n","import type { PropsWithChildren } from \"react\";\nimport React, { useCallback } from \"react\";\nimport { Heading } from \"../elements/Heading\";\nimport { Button } from \"../form/Button\";\nimport style from \"./Alert.module.css\";\nimport { PopupLayout, PopupLayoutProps } from \"./parts/PopupLayout\";\nexport type AlertAction = {\n  key: string;\n  value: string;\n  variant?: string;\n};\nexport const Alert = ({\n  actions,\n  onSelect,\n  isLoading,\n  children,\n  title,\n  error,\n  description,\n  direction,\n  ...props\n}: PopupLayoutProps &\n  PropsWithChildren<{\n    title?: string;\n    description?: string;\n    onSelect?: (actionType: string) => void;\n    mark?: string;\n    isLoading?: boolean;\n    aspectRatio?: string;\n    error?: Error;\n    direction?: string;\n    actions?: AlertAction[];\n  }>) => {\n  const handleAction: React.MouseEventHandler<HTMLButtonElement> = useCallback((e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const action = e.currentTarget.getAttribute(\"data-action\");\n    if (!action || !onSelect) {\n      return;\n    }\n    onSelect(action);\n  }, []);\n  return (\n    <PopupLayout {...props} variant=\"alert\">\n      <div className={style.content} data-is-loading={isLoading}>\n        {title && <Heading level={3}>{title}</Heading>}\n        {description && <p className={style.description}>{description}</p>}\n        {error && (\n          <p>\n            <strong>{error.name}</strong>\n            {error.message}\n            {hasErrorCause(error) && <>Caused by: {error.cause.message}</>}\n          </p>\n        )}\n        {children}\n        <div className={style.buttonGroup} data-direction={direction}>\n          {actions?.map((action, i) => {\n            return (\n              <Button\n                onClick={handleAction}\n                data-action={action.key}\n                type=\"button\"\n                key={i}\n                disabled={isLoading}\n                variant={`alert ${action.variant ?? \"\"}`.trim()}\n              >\n                {action.value}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n    </PopupLayout>\n  );\n};\nAlert.displayName = \"Alert\";\nconst hasErrorCause = (error: Error): error is Error & { cause: Error } => {\n  if (!(error instanceof Error)) {\n    return false;\n  }\n  return error.hasOwnProperty(\"cause\");\n};\n","import React from \"react\";\nimport style from \"./Drawer.module.css\";\nimport type { PopupLayoutProps } from \"./parts/PopupLayout\";\nimport { PopupLayout } from \"./parts/PopupLayout\";\nexport const Modal = ({ open = true, onClose, children, potal = true }: PopupLayoutProps) => {\n  return (\n    <PopupLayout open={open} onClose={onClose} potal={potal}>\n      <section className={style.content}>{children}</section>\n    </PopupLayout>\n  );\n};\nModal.displayName = \"Modal\";\n","/**\n * Check if a string is base64 encoded\n * @param str - The string to check\n * @returns true if the string is base64 encoded\n */\nexport function isBase64(str: string): boolean {\n  if (!str || typeof str !== 'string') {\n    return false;\n  }\n\n  // Remove data URL prefix if present\n  const base64String = str.replace(/^data:[^;]*;base64,/, '');\n\n  // Check if string is empty after removing prefix\n  if (base64String.length === 0) {\n    return false;\n  }\n\n  // Base64 regex pattern\n  // Valid base64 characters: A-Z, a-z, 0-9, +, /, and optional padding with =\n  const base64Regex = /^[A-Za-z0-9+/]*={0,2}$/;\n\n  // Check if the string matches the base64 pattern\n  if (!base64Regex.test(base64String)) {\n    return false;\n  }\n\n  // Check if the length is valid (must be divisible by 4)\n  if (base64String.length % 4 !== 0) {\n    return false;\n  }\n\n  try {\n    // Try to decode the base64 string\n    // If it's not valid base64, this will throw an error\n    atob(base64String);\n    return true;\n  } catch {\n    return false;\n  }\n}","/**\n * Check if a string is a valid URL\n * @param str - The string to check\n * @param options - Options for URL validation\n * @returns true if the string is a valid URL\n */\nexport function isURL(str: string, options?: { requireProtocol?: boolean }): boolean {\n  if (!str || typeof str !== 'string') {\n    return false;\n  }\n\n  // Trim whitespace\n  const trimmed = str.trim();\n  if (trimmed.length === 0) {\n    return false;\n  }\n\n  try {\n    const url = new URL(trimmed);\n    \n    // Check if it has a valid protocol\n    const validProtocols = ['http:', 'https:', 'ftp:', 'ftps:'];\n    if (!validProtocols.includes(url.protocol)) {\n      // If protocol is not valid but requireProtocol is false, try with https prefix\n      if (options?.requireProtocol === false) {\n        throw new Error('Invalid protocol, retry with https');\n      }\n      return false;\n    }\n\n    return true;\n  } catch {\n    // If URL constructor throws, try to check if it's a protocol-relative URL\n    if (options?.requireProtocol === false) {\n      // Don't try to convert paths to URLs\n      if (trimmed.startsWith('/') && !trimmed.startsWith('//')) {\n        return false;\n      }\n      \n      try {\n        // Try with a default protocol\n        const urlWithProtocol = trimmed.startsWith('//') ? `https:${trimmed}` : `https://${trimmed}`;\n        const url = new URL(urlWithProtocol);\n        \n        // Check if it has a valid protocol (should always be true here, but just in case)\n        const validProtocols = ['http:', 'https:', 'ftp:', 'ftps:'];\n        if (!validProtocols.includes(url.protocol)) {\n          return false;\n        }\n        \n        return true;\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  }\n}","import { useCallback, useEffect, useRef } from \"react\";\n\n/**\n * Hook for managing Object URLs lifecycle with automatic cleanup\n * Provides efficient memory management for file previews\n */\nexport const useObjectURLs = () => {\n  const urlsRef = useRef<Set<string>>(new Set());\n\n  const createObjectURL = useCallback((file: File): string => {\n    const url = URL.createObjectURL(file);\n    urlsRef.current.add(url);\n    return url;\n  }, []);\n\n  const revokeObjectURL = useCallback((url: string): void => {\n    if (urlsRef.current.has(url)) {\n      URL.revokeObjectURL(url);\n      urlsRef.current.delete(url);\n    }\n  }, []);\n\n  const revokeAllObjectURLs = useCallback((): void => {\n    urlsRef.current.forEach(url => URL.revokeObjectURL(url));\n    urlsRef.current.clear();\n  }, []);\n\n  // Cleanup all URLs on unmount\n  useEffect(() => {\n    return () => {\n      urlsRef.current.forEach(url => URL.revokeObjectURL(url));\n      urlsRef.current.clear();\n    };\n  }, []);\n\n  return {\n    createObjectURL,\n    revokeObjectURL,\n    revokeAllObjectURLs,\n    get activeURLCount() {\n      return urlsRef.current.size;\n    }\n  };\n};","import { useMemo } from \"react\";\n\ninterface MediaInputMessages {\n  clickToSelect: string;\n  orDragAndDrop: string;\n  dropFilesHere: string;\n}\n\nconst messages: Record<string, MediaInputMessages> = {\n  en: {\n    clickToSelect: \"Click to select files\",\n    orDragAndDrop: \"or drag and drop\",\n    dropFilesHere: \"Drop files here\"\n  },\n  ja: {\n    clickToSelect: \"ファイルを選択\",\n    orDragAndDrop: \"またはドラッグ&ドロップ\",\n    dropFilesHere: \"ファイルをここにドロップ\"\n  },\n  es: {\n    clickToSelect: \"Haz clic para seleccionar archivos\",\n    orDragAndDrop: \"o arrastra y suelta\",\n    dropFilesHere: \"Suelta los archivos aquí\"\n  },\n  fr: {\n    clickToSelect: \"Cliquez pour sélectionner des fichiers\",\n    orDragAndDrop: \"ou glissez-déposez\",\n    dropFilesHere: \"Déposez les fichiers ici\"\n  },\n  de: {\n    clickToSelect: \"Klicken Sie, um Dateien auszuwählen\",\n    orDragAndDrop: \"oder ziehen und ablegen\",\n    dropFilesHere: \"Dateien hier ablegen\"\n  },\n  ko: {\n    clickToSelect: \"파일 선택하기\",\n    orDragAndDrop: \"또는 드래그 앤 드롭\",\n    dropFilesHere: \"파일을 여기에 드롭하세요\"\n  },\n  \"zh-CN\": {\n    clickToSelect: \"点击选择文件\",\n    orDragAndDrop: \"或拖拽上传\",\n    dropFilesHere: \"将文件拖拽到这里\"\n  },\n  \"zh-TW\": {\n    clickToSelect: \"點擊選擇檔案\",\n    orDragAndDrop: \"或拖曳上傳\",\n    dropFilesHere: \"將檔案拖曳到這裡\"\n  }\n};\n\n/**\n * Hook for MediaInput internationalization\n * Automatically detects browser language and provides appropriate messages\n */\nexport const useMediaInputI18n = (customLocale?: string) => {\n  const locale = useMemo(() => {\n    if (customLocale) return customLocale;\n    \n    if (typeof window === \"undefined\") return \"en\";\n    \n    // Get browser language\n    const browserLang = navigator.language;\n    \n    // Try exact match first (e.g., \"zh-CN\")\n    if (messages[browserLang]) {\n      return browserLang;\n    }\n    \n    // Try language code only (e.g., \"zh\" from \"zh-CN\")\n    const langCode = browserLang.split(\"-\")[0];\n    if (messages[langCode]) {\n      return langCode;\n    }\n    \n    // Fallback to English\n    return \"en\";\n  }, [customLocale]);\n\n  const currentMessages = messages[locale] || messages.en;\n\n  return {\n    locale,\n    messages: currentMessages,\n    getSelectText: (isDragActive: boolean) => {\n      if (isDragActive) {\n        return currentMessages.dropFilesHere;\n      }\n      return `${currentMessages.clickToSelect} ${currentMessages.orDragAndDrop}`;\n    }\n  };\n};","import type { CSSProperties, SyntheticEvent } from \"react\";\nimport * as React from \"react\";\nimport { memo, useCallback, useMemo } from \"react\";\nimport styles from \"./MediaPreview.module.css\";\n\nexport interface MediaPreviewProps {\n  src: string;\n  alt?: string;\n  maxWidth?: number;\n  maxHeight?: number;\n  minWidth?: number;\n  minHeight?: number;\n  aspectRatioRange?: {\n    min: number; // minimum aspect ratio (width/height)\n    max: number; // maximum aspect ratio (width/height)\n  };\n  onLoad?: () => void;\n  onError?: () => void;\n  className?: string;\n}\n\nexport const MediaPreview = memo<MediaPreviewProps>(({\n  src,\n  alt = \"Media preview\",\n  maxWidth = 256,\n  maxHeight = 256,\n  minWidth = 64,\n  minHeight = 64,\n  aspectRatioRange = { min: 0.25, max: 4 }, // 1:4 to 4:1 ratio\n  onLoad,\n  onError,\n  className\n}) => {\n  const handleLoad = useCallback((event: SyntheticEvent<HTMLImageElement>) => {\n    const img = event.currentTarget;\n    const { naturalWidth, naturalHeight } = img;\n    \n    if (naturalWidth === 0 || naturalHeight === 0) {\n      onError?.();\n      return;\n    }\n    \n    onLoad?.();\n  }, [onLoad, onError]);\n\n  const containerStyles: CSSProperties = useMemo(() => ({\n    '--max-width': `${maxWidth}px`,\n    '--max-height': `${maxHeight}px`,\n    '--min-width': `${minWidth}px`,\n    '--min-height': `${minHeight}px`,\n    '--aspect-ratio-min': aspectRatioRange.min.toString(),\n    '--aspect-ratio-max': aspectRatioRange.max.toString(),\n  } as CSSProperties), [maxWidth, maxHeight, minWidth, minHeight, aspectRatioRange]);\n\n  return (\n    <div \n      className={`${styles.mediaPreviewContainer} ${className || ''}`}\n      style={containerStyles}\n    >\n      <img\n        src={src}\n        alt={alt}\n        className={styles.mediaPreview}\n        onLoad={handleLoad}\n        onError={onError}\n        loading=\"lazy\"\n      />\n    </div>\n  );\n});","export const isRelativeURL = (value: string) => {\n  return value.startsWith(\"/\") || value.startsWith(\".\");\n};\n","import type { InputHTMLAttributes, DragEvent } from \"react\";\nimport * as React from \"react\";\nimport { forwardRef, memo, useCallback, useMemo, useState } from \"react\";\nimport { isBase64 } from \"../../utilities/isBase64\";\nimport { isURL } from \"../../utilities/isURL\";\nimport { useObjectURLs } from \"../../hooks/useObjectURLs\";\nimport { useMediaInputI18n } from \"../../hooks/useMediaInputI18n\";\nimport { MediaPreview } from \"./MediaPreview\";\nimport { isRelativeURL } from \"../../utilities/isRelativeURL\";\nimport style from \"../input.module.css\";\n\nexport interface MediaInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  variant?: \"preview\" | \"files\";\n  maxPreviewWidth?: number;\n  maxPreviewHeight?: number;\n  minPreviewWidth?: number;\n  minPreviewHeight?: number;\n  aspectRatioRange?: {\n    min: number;\n    max: number;\n  };\n  locale?: string;\n}\n\nexport const MediaInput = memo(\n  forwardRef<HTMLInputElement, MediaInputProps>(({ \n    defaultValue, \n    value, \n    variant = \"preview\",\n    maxPreviewWidth = 96,\n    maxPreviewHeight = 96,\n    minPreviewWidth = 48,\n    minPreviewHeight = 48,\n    aspectRatioRange = { min: 0.25, max: 4 },\n    locale,\n    ...props \n  }, ref) => {\n    const [changed, setChanged] = useState(false);\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n    const [isDragActive, setIsDragActive] = useState(false);\n    const { createObjectURL, revokeAllObjectURLs } = useObjectURLs();\n    const { getSelectText } = useMediaInputI18n(locale);\n    const filePreviewable = useMemo(() => {\n      return props.accept?.split(\",\").some((type) => type.trim().startsWith(\"image\"));\n    }, [props.accept]);\n    const initialSrc = useMemo(() => {\n      if (typeof defaultValue !== \"string\") {\n        return undefined;\n      }\n      if (isRelativeURL(defaultValue)) {\n        return defaultValue;\n      }\n      if (isURL(defaultValue)) {\n        return defaultValue;\n      }\n      if (isBase64(defaultValue)) {\n        return defaultValue;\n      }\n      return undefined;\n    }, [defaultValue]);\n\n    const previewUrls = useMemo(() => {\n      return selectedFiles.map(createObjectURL);\n    }, [selectedFiles, createObjectURL]);\n    const handleFiles = useCallback((files: FileList | null) => {\n      if (!files || files.length === 0) {\n        setSelectedFiles([]);\n        setChanged(false);\n        revokeAllObjectURLs();\n        return [];\n      }\n\n      const filesArray = Array.from(files);\n      \n      // Clean up previous URLs before setting new files\n      revokeAllObjectURLs();\n      setSelectedFiles(filesArray);\n      setChanged(true);\n      return filesArray;\n    }, [revokeAllObjectURLs]);\n\n    const changeFileHandler: React.ChangeEventHandler<HTMLInputElement> = useCallback(\n      (e) => {\n        if (!(e.target instanceof HTMLInputElement)) {\n          return;\n        }\n        \n        handleFiles(e.target.files);\n        props.onChange?.(e);\n      },\n      [props.onChange, handleFiles],\n    );\n\n    const handleDragEnter = useCallback((e: DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsDragActive(true);\n    }, []);\n\n    const handleDragLeave = useCallback((e: DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      // Only set to false if we're leaving the entire drop zone\n      if (!e.currentTarget.contains(e.relatedTarget as Node)) {\n        setIsDragActive(false);\n      }\n    }, []);\n\n    const handleDragOver = useCallback((e: DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }, []);\n\n    const handleDrop = useCallback((e: DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsDragActive(false);\n      \n      const files = e.dataTransfer.files;\n      handleFiles(files);\n      \n      // Create a synthetic change event for consistency\n      if (props.onChange) {\n        const syntheticEvent = {\n          target: { files },\n          currentTarget: { files }\n        } as React.ChangeEvent<HTMLInputElement>;\n        props.onChange(syntheticEvent);\n      }\n    }, [handleFiles, props.onChange]);\n    const hasFiles = selectedFiles.length > 0 || (!changed && initialSrc);\n    const isPreviewMode = variant === \"preview\";\n\n    // Files mode - render like normal file input\n    if (!isPreviewMode) {\n      return (\n        <>\n          {!changed && (\n            <input \n              type=\"hidden\" \n              name={props.name} \n              defaultValue={defaultValue} \n              value={value} \n            />\n          )}\n          <input \n            type=\"file\" \n            {...props} \n            name={changed ? props.name : undefined} \n            onChange={changeFileHandler} \n            ref={ref}\n            className={style.input}\n            data-variant=\"files\"\n          />\n        </>\n      );\n    }\n\n    // Preview mode - render with preview functionality\n    return (\n      <div \n        className={`${style.mediaInput} ${\n          isDragActive ? style.mediaInputDragActive : ''\n        } ${\n          hasFiles ? style.mediaInputHasFiles : ''\n        }`}\n        data-variant=\"preview\"\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        <div className={style.mediaInputPreview}>\n          {/* Preview selected files */}\n          {filePreviewable && previewUrls.map((url, i) => (\n            <MediaPreview\n              key={`selected-${i}`}\n              src={url}\n              alt={`Selected file ${i + 1}`}\n              maxWidth={maxPreviewWidth}\n              maxHeight={maxPreviewHeight}\n              minWidth={minPreviewWidth}\n              minHeight={minPreviewHeight}\n              aspectRatioRange={aspectRatioRange}\n            />\n          ))}\n          \n          {/* Preview initial value if no files selected */}\n          {!changed && initialSrc && filePreviewable && (\n            <MediaPreview\n              src={initialSrc}\n              alt=\"Current file\"\n              maxWidth={maxPreviewWidth}\n              maxHeight={maxPreviewHeight}\n              minWidth={minPreviewWidth}\n              minHeight={minPreviewHeight}\n              aspectRatioRange={aspectRatioRange}\n            />\n          )}\n          \n          {/* Empty state placeholder */}\n          {!hasFiles && (\n            <div className={style.mediaInputEmpty}>\n              {getSelectText(isDragActive)}\n            </div>\n          )}\n        </div>\n        \n        {/* Hidden input for preserving initial value */}\n        {!changed && (\n          <input \n            type=\"hidden\" \n            name={props.name} \n            defaultValue={defaultValue} \n            value={value} \n          />\n        )}\n        \n        {/* File input */}\n        <input \n          type=\"file\" \n          {...props} \n          name={changed ? props.name : undefined} \n          onChange={changeFileHandler} \n          ref={ref}\n          className={style.mediaInputFile}\n          aria-label={hasFiles ? `${selectedFiles.length} files selected` : 'Select files'}\n        />\n      </div>\n    );\n  }),\n);\n","import * as React from \"react\";\nimport classes from \"./RangeInput.module.css\";\nimport { HTMLInputElementProps } from \"../Input\";\nimport { ObservePointerCallback, useObservePointer } from \"../../hooks/usePointerObserver\";\nimport { useMeasure } from \"../../hooks/useMeasure\";\nconst safeParseFloat = (value: string | number | null | undefined | string[] | readonly string[], fallback: number) => {\n  if (Array.isArray(value)) {\n    return fallback;\n  }\n  if (value === null || value === undefined) {\n    return fallback;\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value !== \"string\") {\n    return fallback;\n  }\n  return parseFloat(value);\n};\nexport const RangeInput = React.forwardRef<HTMLInputElement, HTMLInputElementProps>(\n  ({ value, defaultValue, ...props }, ref) => {\n    const base = React.useRef<HTMLDivElement>(null);\n    const { min, max, step } = React.useMemo(() => {\n      return {\n        min: safeParseFloat(props.min, Number.MIN_SAFE_INTEGER),\n        max: safeParseFloat(props.max, Number.MAX_SAFE_INTEGER),\n        step: typeof props.step === \"undefined\" ? undefined : safeParseFloat(props.step, 1),\n      };\n    }, [props.min, props.max, props.step]);\n    const [localValue, setLocalValue] = React.useState<number>(() => safeParseFloat(defaultValue, min));\n    const currentValue = React.useMemo(() => {\n      if (value !== undefined) {\n        return safeParseFloat(value, min);\n      }\n      return localValue;\n    }, [value, localValue]);\n    const [bound] = useMeasure(base);\n    const cursor = React.useMemo(() => {\n      return (currentValue - min) / (max - min);\n    }, [currentValue, min, max]);\n    const handlePointer: ObservePointerCallback = React.useCallback(\n      (e) => {\n        const bound = base.current?.getBoundingClientRect();\n        if (!bound) {\n          return;\n        }\n        const actualX = e.pageX - bound.left;\n        const seekDelta = actualX / bound.width;\n        const seekValue = min + (max - min) * seekDelta;\n        const seekStep = typeof step === \"number\" ? Math.round(seekValue / step) * step : seekValue;\n        const seekClamped = Math.min(Math.max(seekStep, min), max);\n        const input = base.current?.querySelector(\"input\");\n        if (!input || !(input instanceof HTMLInputElement)) {\n          return;\n        }\n        input.setAttribute(\"value\", seekClamped.toString());\n        const changeEvent = new Event(\"change\", { bubbles: true });\n        input.dispatchEvent(changeEvent);\n        setLocalValue(seekClamped);\n      },\n      [base, min, max, step, setLocalValue, bound],\n    );\n    useObservePointer<HTMLDivElement>(base, handlePointer);\n    React.useEffect(() => {\n      if (!base.current) {\n        return;\n      }\n      // Set the initial value\n      const input = base.current?.querySelector(\"input\");\n      if (!input || !(input instanceof HTMLInputElement)) {\n        return;\n      }\n      input.setAttribute(\"value\", currentValue.toString());\n    }, [currentValue]);\n    React.useEffect(() => {\n      if (!base.current) {\n        return;\n      }\n      base.current.style.setProperty(\"--progress\", `${cursor}`);\n    }, [cursor]);\n    const variant = React.useMemo(() => {\n      const stepperCount = Math.round((max - min) / (step ?? 1));\n      return stepperCount < 100 ? \"stepped\" : \"linear\";\n    }, [min, max, step]);\n    return (\n      <div className={classes.base} ref={base} data-variant={variant}>\n        <input type=\"range\" className={classes.input} {...props} ref={ref} />\n      </div>\n    );\n  },\n);\nRangeInput.displayName = \"RangeInput\";\n","import * as React from \"react\";\nimport classes from \"./SwitchInput.module.css\";\nimport type { HTMLInputElementProps } from \"../Input\";\nexport const SwitchInput = React.forwardRef<HTMLInputElement, HTMLInputElementProps>(\n  ({ defaultValue, value, ...props }, ref) => {\n    return (\n      <label className={classes.base} htmlFor={props.name}>\n        <input type=\"checkbox\" {...props} ref={ref} className={classes.input} />\n        <div className={classes.toggle}>\n          <div className={classes.knob}></div>\n        </div>\n      </label>\n    );\n  },\n);\nSwitchInput.displayName = \"SwitchInput\";\n","import * as React from \"react\";\nexport const dateToLocaleString = (isoString: string) => {\n  const date = new Date(isoString);\n  const offset = date.getTimezoneOffset();\n  return new Date(date.getTime() - offset * 60 * 1000).toISOString().replace(\"Z\", \"\");\n};\n\nexport const DateTimeInput = React.forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\n  ({ children, ...props }, ref) => {\n    const value = props.value && dateToLocaleString(props.value.toString());\n    const defaultValue = props.defaultValue && dateToLocaleString(props.defaultValue.toString());\n    return (\n      <input type={props.type ?? \"text\"} {...props} value={value} defaultValue={defaultValue} ref={ref}>\n        {children}\n      </input>\n    );\n  },\n);\nDateTimeInput.displayName = \"DateTimeInput\";\n","import React, { forwardRef, InputHTMLAttributes, memo, useRef } from \"react\";\nimport radioStyle from \"./radio.module.css\";\nimport checkboxStyle from \"./checkbox.module.css\";\nimport inputStyle from \"./input.module.css\";\nimport { MediaInput } from \"./custom-inputs/MediaInput\";\nimport { RangeInput } from \"./custom-inputs/RangeInput\";\nimport { SwitchInput } from \"./custom-inputs/SwitchInput\";\nimport { DateTimeInput } from \"./custom-inputs/DateTimeInput\";\nimport { Checkmark, IndeterminateIcon } from \"../blocks/Icon\";\nconst classNameRecord: Record<string, string> = {\n  text: inputStyle.input,\n  password: inputStyle.input,\n  checkbox: checkboxStyle.checkbox,\n  radio: radioStyle.radio,\n};\nexport type HTMLInputElementProps = React.PropsWithChildren<\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> & {\n    [K in `data-${string}`]?: string;\n  } & {\n    switch?: \"true\" | \"false\";\n    indeterminate?: boolean;\n  }\n>;\nexport const Input = React.forwardRef<HTMLInputElement, HTMLInputElementProps>(({ children, ...props }, ref) => {\n  const errorMessage = props[\"aria-errormessage\"];\n  const className = classNameRecord[props.type ?? \"text\"] ?? inputStyle.input;\n  const errorToolTip = errorMessage ? <span className={inputStyle.errorLine}>{errorMessage}</span> : <></>;\n  return (\n    <>\n      <RenderInput {...props} className={className} ref={ref}></RenderInput>\n      {errorToolTip}\n    </>\n  );\n});\nInput.displayName = \"Input\";\n\nconst RenderInput = forwardRef<HTMLInputElement, HTMLInputElementProps>(({ children, className, ...props }, ref) => {\n  const variant = props[\"data-variant\"];\n\n  if (props.type === \"file\") {\n    return <MediaInput {...props} variant={variant as \"preview\" | \"files\"} ref={ref}></MediaInput>;\n  }\n  if (props.type === \"checkbox\" && (variant === \"switch\" || props.switch === \"true\")) {\n    return <SwitchInput {...props} switch={\"false\"} ref={ref}></SwitchInput>;\n  }\n  if (props.type === \"range\") {\n    return <RangeInput {...props} ref={ref}></RangeInput>;\n  }\n  if (props.type === \"datetime-local\") {\n    return (\n      <DateTimeInput type={props.type ?? \"text\"} {...props} ref={ref} className={className}>\n        {children}\n      </DateTimeInput>\n    );\n  }\n  if (props.type === \"checkbox\") {\n    return <CheckboxInput {...props} ref={ref}></CheckboxInput>;\n  }\n  return (\n    <input type={props.type ?? \"text\"} {...props} ref={ref} className={className}>\n      {children}\n    </input>\n  );\n});\n\nconst CheckboxInput = ({\n  indeterminate,\n  ...props\n}: HTMLInputElementProps & {\n  className?: string;\n  children?: React.ReactNode;\n  ref?: React.Ref<HTMLInputElement>;\n  indeterminate?: boolean;\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    if (!ref.current || typeof indeterminate !== \"boolean\") {\n      return;\n    }\n    const inputElement = ref.current.querySelector(\"input\");\n    if (!inputElement) {\n      return;\n    }\n    inputElement.indeterminate = indeterminate;\n  }, [indeterminate]);\n  const icon = indeterminate ? <IndeterminateIcon /> : <Checkmark />;\n  return (\n    <div role=\"checkbox\" className={checkboxStyle.base} ref={ref}>\n      <input\n        type={props.type}\n        {...props}\n        ref={props.ref}\n        className={checkboxStyle.checkbox}\n        role=\"presentation\"\n        checked={props.checked}\n        defaultChecked={props.defaultChecked}\n        aria-checked={props.checked}\n      >\n        {props.children}\n      </input>\n      <i className={checkboxStyle.mark} role=\"presentation\">\n        {icon}\n      </i>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { AllHTMLAttributes, Children, forwardRef, memo } from \"react\";\nimport { Text } from \"../blocks/Text\";\nimport style from \"./form.module.css\";\nimport { classNames } from \"../utilities/classNames\";\n\nexport const Label = memo(\n  forwardRef<HTMLLabelElement, AllHTMLAttributes<HTMLLabelElement>>(({ children, ...props }, ref) => {\n    const className = classNames(style.label, props.className);\n    return (\n      <label className={className} {...props} ref={ref}>\n        {Children.map(children, (child) => {\n          if (typeof child === \"string\") {\n            return <Text>{child}</Text>;\n          }\n          return child;\n        })}\n      </label>\n    );\n  }),\n);\nLabel.displayName = \"Label\";\n","import * as React from \"react\";\nimport { NativeSortable } from \"../controls/NativeSortable\";\nexport const SortableList = <T extends { id: string }>({\n  items,\n  setItems,\n  element,\n}: React.PropsWithChildren<{\n  items: T[];\n  setItems: React.Dispatch<React.SetStateAction<T[]>>;\n  element: (item: T, index: number) => React.ReactNode;\n}>) => {\n  return (\n    <NativeSortable items={items} onChange={setItems}>\n      {items.map((item, i) => {\n        return <React.Fragment key={item.id}>{element(item, i)}</React.Fragment>;\n      })}\n    </NativeSortable>\n  );\n};\nSortableList.displayName = \"SortableList\";\n","import * as React from \"react\";\nimport { SearchIcon } from \"../../blocks/SearchIcon\";\nimport classes from \"./SelectDropdown.module.css\";\n\nexport interface SelectOption {\n  value: string;\n  label: string;\n}\n\nexport interface SelectDropdownProps {\n  isOpen: boolean;\n  position: 'top' | 'bottom';\n  dialogPosition: { top: number; left: number; width: number };\n  options: SelectOption[];\n  selectedValues: string[];\n  multiple?: boolean;\n  searchTerm: string;\n  onSearchChange: (term: string) => void;\n  onOptionToggle: (value: string) => void;\n  onClose: () => void;\n  searchPlaceholder?: string;\n  noOptionsMessage?: string;\n  noMatchingMessage?: string;\n}\n\nexport const SelectDropdown = React.forwardRef<HTMLDialogElement | null, SelectDropdownProps>(({\n  isOpen,\n  position,\n  dialogPosition,\n  options,\n  selectedValues,\n  multiple = false,\n  searchTerm,\n  onSearchChange,\n  onOptionToggle,\n  onClose,\n  searchPlaceholder = \"Search options...\",\n  noOptionsMessage = \"No options available\",\n  noMatchingMessage = \"No matching options found\"\n}, ref) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  // Handle keyboard events\n  React.useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    const dialog = ref && 'current' in ref ? ref.current : null;\n    const handleDialogClick = (event: MouseEvent) => {\n      if (event.target === dialog) {\n        onClose();\n      }\n    };\n\n    if (dialog) {\n      dialog.addEventListener('click', handleDialogClick);\n    }\n    \n    document.addEventListener('keydown', handleEscape);\n    \n    return () => {\n      if (dialog) {\n        dialog.removeEventListener('click', handleDialogClick);\n      }\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [isOpen, onClose, ref]);\n\n  // Focus search input when dialog opens\n  React.useEffect(() => {\n    if (isOpen && inputRef.current) {\n      setTimeout(() => {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }, 50);\n    }\n  }, [isOpen]);\n\n  const filteredOptions = React.useMemo(() => {\n    if (!searchTerm) return options;\n    return options.filter(option =>\n      option.label.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [options, searchTerm]);\n\n  return (\n    <dialog \n      ref={ref}\n      className={classes.contextDialog}\n      style={{\n        top: `${dialogPosition.top}px`,\n        left: `${dialogPosition.left}px`,\n        width: `${dialogPosition.width}px`,\n      }}\n    >\n      <div \n        className={`${classes.dropdown} ${classes[`dropdown${position === 'top' ? 'Top' : 'Bottom'}`]}`}\n      >\n        <div className={classes.searchHeader}>\n          <div className={classes.searchInputContainer}>\n            <SearchIcon size={14} className={classes.searchIcon} />\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={searchTerm}\n              placeholder={searchPlaceholder}\n              onChange={(e) => onSearchChange(e.target.value)}\n              className={classes.contextSearchInput}\n              autoComplete=\"off\"\n              autoFocus\n            />\n          </div>\n        </div>\n        {filteredOptions.length === 0 ? (\n          <div className={classes.noOptions}>\n            {searchTerm ? noMatchingMessage : noOptionsMessage}\n          </div>\n        ) : (\n          <ul className={classes.options}>\n            {filteredOptions.map((option, index) => {\n              const isSelected = selectedValues.includes(option.value);\n              return (\n                <li key={index} className={classes.option}>\n                  <button\n                    type=\"button\"\n                    className={classes.optionButton}\n                    onClick={() => onOptionToggle(option.value)}\n                  >\n                    {multiple && (\n                      <span className={classes.optionCheckbox}>\n                        {isSelected ? (\n                          <span>✓</span>\n                        ) : (\n                          <span className={classes.checkboxEmpty} />\n                        )}\n                      </span>\n                    )}\n                    <span className={classes.optionLabel}>\n                      {option.label}\n                    </span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </dialog>\n  );\n});\n\nSelectDropdown.displayName = \"SelectDropdown\";","import * as React from \"react\";\nimport { ChevronMark } from \"../../blocks/ChevronMark\";\nimport classes from \"./SelectInput.module.css\";\n\nexport interface SelectInputProps {\n  children: React.ReactNode;\n  onClick: () => void;\n  disabled?: boolean;\n  isOpen?: boolean;\n  className?: string;\n}\n\nexport const SelectInput = React.forwardRef<HTMLDivElement | null, SelectInputProps>(({\n  children,\n  onClick,\n  disabled = false,\n  isOpen = false,\n  className\n}, ref) => {\n  return (\n    <div \n      ref={ref}\n      className={`${classes.inputContainer} ${className || ''}`} \n      onClick={disabled ? undefined : onClick}\n      data-disabled={disabled}\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      <div className={classes.mark} role=\"presentation\">\n        <ChevronMark direction={isOpen ? \"up\" : \"down\"} />\n      </div>\n    </div>\n  );\n});\n\nSelectInput.displayName = \"SelectInput\";","import * as React from \"react\";\nimport classes from \"./SelectTags.module.css\";\n\nexport interface SelectTagsProps {\n  selectedValues: string[];\n  getOptionLabel: (value: string) => string;\n  onRemoveTag?: (value: string, event: React.MouseEvent) => void;\n  placeholder?: string;\n  multiple?: boolean;\n  disabled?: boolean;\n  renderSelected?: (value: string) => React.ReactNode;\n}\n\nexport const SelectTags: React.FC<SelectTagsProps> = ({\n  selectedValues,\n  getOptionLabel,\n  onRemoveTag,\n  placeholder = \"Select option...\",\n  multiple = false,\n  disabled = false,\n  renderSelected\n}) => {\n  if (selectedValues.length === 0) {\n    return <span className={classes.placeholder}>{placeholder}</span>;\n  }\n\n  if (!multiple && selectedValues.length > 0) {\n    const value = selectedValues[0];\n    return (\n      <span className={classes.singleValue}>\n        {renderSelected ? renderSelected(value) : getOptionLabel(value)}\n      </span>\n    );\n  }\n\n  return (\n    <>\n      {selectedValues.map((selectedValue, index) => (\n        <span key={index} className={classes.tagSegment}>\n          <span className={classes.tagText}>\n            {getOptionLabel(selectedValue)}\n          </span>\n          {!disabled && onRemoveTag && (\n            <button\n              type=\"button\"\n              className={classes.tagRemove}\n              onClick={(e) => onRemoveTag(selectedValue, e)}\n              aria-label={`Remove ${getOptionLabel(selectedValue)}`}\n            >\n              ×\n            </button>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n\nSelectTags.displayName = \"SelectTags\";","import * as React from \"react\";\n\nexport type ValueType = string | readonly string[] | number | undefined;\n\nexport interface UseSelectBehaviorProps {\n  value?: ValueType;\n  defaultValue?: ValueType;\n  multiple?: boolean;\n  disabled?: boolean;\n  onChange?: (value: ValueType) => void;\n}\n\nexport interface UseSelectBehaviorReturn {\n  currentValue: ValueType;\n  selectedValues: string[];\n  handleToggleOption: (optionValue: string) => void;\n  handleRemoveTag: (optionValue: string, event: React.MouseEvent) => void;\n}\n\nexport const useSelectBehavior = ({\n  value,\n  defaultValue,\n  multiple = false,\n  disabled = false,\n  onChange\n}: UseSelectBehaviorProps): UseSelectBehaviorReturn => {\n  const [localValue, setLocalValue] = React.useState<ValueType>(() => defaultValue);\n\n  const currentValue = React.useMemo(() => {\n    if (value !== undefined) {\n      return value;\n    }\n    return localValue;\n  }, [value, localValue]);\n\n  const selectedValues = React.useMemo(() => {\n    if (multiple) {\n      return Array.isArray(currentValue) ? currentValue.map(String) : (currentValue ? [String(currentValue)] : []);\n    }\n    return currentValue ? [String(currentValue)] : [];\n  }, [currentValue, multiple]);\n\n  const handleToggleOption = React.useCallback((optionValue: string) => {\n    if (disabled) return;\n\n    let newValue: ValueType;\n    if (multiple) {\n      const currentArray = Array.isArray(currentValue) ? currentValue.map(String) : (currentValue ? [String(currentValue)] : []);\n      if (currentArray.includes(optionValue)) {\n        newValue = currentArray.filter(v => v !== optionValue);\n      } else {\n        newValue = [...currentArray, optionValue];\n      }\n    } else {\n      newValue = optionValue;\n    }\n    \n    setLocalValue(newValue);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  }, [disabled, multiple, currentValue, onChange]);\n\n  const handleRemoveTag = React.useCallback((optionValue: string, event: React.MouseEvent) => {\n    if (disabled) return;\n    \n    event.stopPropagation();\n    \n    const currentArray = Array.isArray(currentValue) ? currentValue.map(String) : (currentValue ? [String(currentValue)] : []);\n    const newValue = currentArray.filter(v => v !== optionValue);\n    setLocalValue(newValue);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  }, [disabled, currentValue, onChange]);\n\n  return {\n    currentValue,\n    selectedValues,\n    handleToggleOption,\n    handleRemoveTag\n  };\n};","import * as React from \"react\";\n\nexport interface UseSelectDropdownProps {\n  onClose?: () => void;\n}\n\nexport interface UseSelectDropdownReturn {\n  isOpen: boolean;\n  searchTerm: string;\n  dropdownPosition: 'bottom' | 'top';\n  dialogPosition: { top: number; left: number; width: number };\n  containerRef: React.RefObject<HTMLDivElement | null>;\n  dialogRef: React.RefObject<HTMLDialogElement | null>;\n  openDialog: () => void;\n  closeDialog: () => void;\n  setSearchTerm: (term: string) => void;\n}\n\nexport const useSelectDropdown = ({\n  onClose\n}: UseSelectDropdownProps = {}): UseSelectDropdownReturn => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [dropdownPosition, setDropdownPosition] = React.useState<'bottom' | 'top'>('bottom');\n  const [dialogPosition, setDialogPosition] = React.useState({ top: 0, left: 0, width: 0 });\n  \n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const dialogRef = React.useRef<HTMLDialogElement>(null);\n\n  // Calculate dialog position for modal context menu\n  const calculateDialogPosition = React.useCallback((): { position: 'bottom' | 'top'; dialogPos: { top: number; left: number; width: number } } => {\n    if (!containerRef.current) return { position: 'bottom' as const, dialogPos: { top: 0, left: 0, width: 0 } };\n    \n    const containerRect = containerRef.current.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    const dropdownMaxHeight = 200; // 12.5em in pixels (assuming 16px base)\n    const spaceBelow = viewportHeight - containerRect.bottom;\n    const spaceAbove = containerRect.top;\n    \n    // Calculate position for dialog element\n    const dialogPos = {\n      top: spaceBelow < dropdownMaxHeight && spaceAbove >= dropdownMaxHeight \n        ? containerRect.top - dropdownMaxHeight - 8  // Position above\n        : containerRect.bottom + 4,  // Position below\n      left: containerRect.left,\n      width: containerRect.width\n    };\n    \n    const position = spaceBelow < dropdownMaxHeight && spaceAbove >= dropdownMaxHeight ? 'top' : 'bottom';\n    \n    return { position, dialogPos };\n  }, []);\n\n  // Open dialog modal\n  const openDialog = React.useCallback(() => {\n    const { position, dialogPos } = calculateDialogPosition();\n    setDropdownPosition(position);\n    setDialogPosition(dialogPos);\n    setIsOpen(true);\n    \n    if (dialogRef.current) {\n      dialogRef.current.showModal();\n    }\n  }, [calculateDialogPosition]);\n\n  // Close dialog modal\n  const closeDialog = React.useCallback(() => {\n    if (dialogRef.current && dialogRef.current.open) {\n      dialogRef.current.close();\n    }\n  }, []);\n\n  // Handle dialog close event\n  const handleDialogClose = React.useCallback(() => {\n    setIsOpen(false);\n    setSearchTerm('');\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle resize and scroll events\n  React.useEffect(() => {\n    const handleResize = () => {\n      if (isOpen && containerRef.current) {\n        const { position, dialogPos } = calculateDialogPosition();\n        setDropdownPosition(position);\n        setDialogPosition(dialogPos);\n      }\n    };\n\n    const dialog = dialogRef.current;\n    if (dialog) {\n      dialog.addEventListener('close', handleDialogClose);\n    }\n    \n    window.addEventListener('resize', handleResize);\n    window.addEventListener('scroll', handleResize);\n    \n    return () => {\n      if (dialog) {\n        dialog.removeEventListener('close', handleDialogClose);\n      }\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('scroll', handleResize);\n    };\n  }, [isOpen, calculateDialogPosition, handleDialogClose]);\n\n  return {\n    isOpen,\n    searchTerm,\n    dropdownPosition,\n    dialogPosition,\n    containerRef,\n    dialogRef,\n    openDialog,\n    closeDialog,\n    setSearchTerm\n  };\n};","import * as React from \"react\";\n\nexport interface SelectableOption {\n  value: string;\n  label: string;\n}\n\nexport interface UseSelectableOptionsProps {\n  children: React.ReactNode;\n  value?: string | readonly string[];\n  defaultValue?: string | readonly string[];\n  multiple?: boolean;\n}\n\nexport interface UseSelectableOptionsReturn {\n  options: SelectableOption[];\n  selectedValues: string[];\n  handleToggleOption: (value: string, checked: boolean) => void;\n  handleToggleAll: (checked: boolean) => void;\n  isCheckedAll: boolean;\n  isCheckedPartially: boolean;\n}\n\nconst isOptionNode = (\n  node: any,\n): node is React.ReactElement<{\n  value: string;\n  children: React.ReactNode;\n}> => {\n  return React.isValidElement(node) && node.type === \"option\";\n};\n\nconst toArray = (source: string | readonly string[] | undefined): string[] => {\n  if (source === undefined) {\n    return [];\n  }\n  if (Array.isArray(source)) {\n    return [...source];\n  }\n  return [source as string];\n};\n\nexport const useSelectableOptions = ({\n  children,\n  value,\n  defaultValue,\n  multiple = true\n}: UseSelectableOptionsProps): UseSelectableOptionsReturn => {\n  const isControlled = value !== undefined;\n  const [localValues, setLocalValues] = React.useState<string[]>(() => {\n    const source = isControlled ? value : defaultValue;\n    return toArray(source);\n  });\n\n  const selectedValues = isControlled ? toArray(value) : localValues;\n\n  const options = React.useMemo(() => {\n    const childArray = React.Children.toArray(children);\n    return childArray\n      .filter(isOptionNode)\n      .map(option => ({\n        value: option.props.value,\n        label: option.props.children?.toString() || option.props.value\n      }));\n  }, [children]);\n\n  const handleToggleOption = React.useCallback((optionValue: string, checked: boolean) => {\n    if (!multiple) {\n      setLocalValues(checked ? [optionValue] : []);\n      return;\n    }\n\n    setLocalValues(prev => {\n      if (checked) {\n        return [...prev, optionValue];\n      }\n      return prev.filter(v => v !== optionValue);\n    });\n  }, [multiple]);\n\n  const handleToggleAll = React.useCallback((checked: boolean) => {\n    if (checked) {\n      setLocalValues(options.map(option => option.value));\n    } else {\n      setLocalValues([]);\n    }\n  }, [options]);\n\n  const isCheckedPartially = selectedValues.length > 0 && selectedValues.length < options.length;\n  const isCheckedAll = isCheckedPartially ? false : selectedValues.length === options.length;\n\n  return {\n    options,\n    selectedValues,\n    handleToggleOption,\n    handleToggleAll,\n    isCheckedAll,\n    isCheckedPartially\n  };\n};","import * as React from \"react\";\nimport { \n  SelectDropdown, \n  SelectInput, \n  SelectTags, \n  useSelectBehavior, \n  useSelectDropdown,\n  type SelectOption,\n  type ValueType \n} from \"./shared\";\nimport classes from \"./DataList.module.css\";\n\nexport type DataListProps = {\n  value?: ValueType;\n  defaultValue?: ValueType;\n  name?: string;\n  list?: string;\n  placeholder?: string;\n  multiple?: boolean;\n  disabled?: boolean;\n  renderSelected?: (value: string, option?: HTMLOptionElement) => React.ReactNode;\n  onChange?: (value: ValueType) => void;\n} & Omit<React.InputHTMLAttributes<HTMLInputElement>, 'value' | 'defaultValue' | 'name' | 'list' | 'placeholder' | 'multiple' | 'disabled' | 'onChange'>;\n\nexport const DataList = ({\n  value,\n  defaultValue,\n  name,\n  list,\n  renderSelected,\n  placeholder = 'Select option...',\n  multiple = false,\n  disabled = false,\n  onChange,\n  ...props\n}: DataListProps) => {\n  const {\n    currentValue,\n    selectedValues,\n    handleToggleOption,\n    handleRemoveTag\n  } = useSelectBehavior({ value, defaultValue, multiple, disabled, onChange });\n\n  const {\n    isOpen,\n    searchTerm,\n    dropdownPosition,\n    dialogPosition,\n    containerRef,\n    dialogRef,\n    openDialog,\n    closeDialog,\n    setSearchTerm\n  } = useSelectDropdown();\n\n\n\n  const handleContainerClick = React.useCallback(() => {\n    if (!isOpen && !disabled) {\n      openDialog()\n    }\n  }, [isOpen, disabled, openDialog]);\n\n  const handleOptionToggle = React.useCallback((optionValue: string) => {\n    handleToggleOption(optionValue)\n    if (!multiple) {\n      closeDialog()\n    }\n  }, [handleToggleOption, multiple, closeDialog]);\n\n  const { dataListElement, options } = useDataListElement({ list });\n\n  const getOptionLabel = React.useCallback((optionValue: string) => {\n    return options?.find(option => option.value === optionValue)?.label || optionValue\n  }, [options]);\n\n  return (\n    <div className={classes.container} ref={containerRef}>\n      <SelectInput \n        onClick={handleContainerClick}\n        disabled={disabled}\n        isOpen={isOpen}\n      >\n        <SelectTags\n          selectedValues={selectedValues}\n          getOptionLabel={getOptionLabel}\n          onRemoveTag={handleRemoveTag}\n          placeholder={placeholder}\n          multiple={multiple}\n          disabled={disabled}\n          renderSelected={renderSelected ? (value) => renderSelected(value, dataListElement?.querySelector(`option[value=\"${value}\"]`) as HTMLOptionElement) : undefined}\n        />\n      </SelectInput>\n\n      <SelectDropdown\n        ref={dialogRef}\n        isOpen={isOpen}\n        position={dropdownPosition}\n        dialogPosition={dialogPosition}\n        options={options || []}\n        selectedValues={selectedValues}\n        multiple={multiple}\n        searchTerm={searchTerm}\n        onSearchChange={setSearchTerm}\n        onOptionToggle={handleOptionToggle}\n        onClose={closeDialog}\n      />\n      \n      {/* Hidden input for form submission */}\n      <input\n        type=\"hidden\"\n        name={name}\n        value={multiple ? JSON.stringify(selectedValues) : String(selectedValues[0] || '')}\n      />\n    </div>\n  );\n};\n\nconst useDataListElement = ({ list }: { list?: string }) => {\n  const [dataListElement, setDataListElement] = React.useState<HTMLDataListElement>();\n  const [options, setOptions] = React.useState<SelectOption[]>([]);\n  \n  React.useEffect(() => {\n    if (!window?.document || !list) {\n      return;\n    }\n    \n    const dataListElement = document.getElementById(list);\n    if (!dataListElement || !(dataListElement instanceof HTMLDataListElement)) {\n      return;\n    }\n    \n    setDataListElement(dataListElement);\n    \n    // Extract options from datalist\n    const optionElements = Array.from(dataListElement.options);\n    const optionsData = optionElements.map(option => ({\n      value: option.value,\n      label: option.label || option.textContent || option.value\n    }));\n    \n    setOptions(optionsData);\n  }, [list]);\n  \n  return { dataListElement, options };\n};","import React from \"react\";\n\nimport classes from \"./CloseButton.module.css\";\nimport { CloseIcon } from \"../blocks/Icon\";\nexport const CloseButton = React.memo(\n  React.forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>(({ children, ...props }, ref) => {\n    return (\n      <button {...props} ref={ref} className={classes.closeButton} aria-label=\"Close\" type=\"button\" data-variant=\"close\">\n        <CloseIcon size={16} />\n      </button>\n    );\n  }),\n);\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./Time.module.css\";\nimport { Text } from \"./Text\";\nconst isValid = (date: Date | string | number | undefined | null): date is Date => {\n  if (date === null || date === undefined) {\n    return false;\n  }\n  if (typeof date === \"number\") {\n    return true;\n  }\n  if (typeof date === \"string\") {\n    return !isNaN(Date.parse(date));\n  }\n  return date instanceof Date && !isNaN(date.getTime());\n};\nexport const Time = memo(\n  forwardRef<\n    HTMLTimeElement,\n    HTMLAttributes<HTMLTimeElement> & {\n      type?: \"unix\" | \"unixtime\" | \"ISO8601\" | \"ulid\" | string;\n      timestamp: Date | number | string | undefined;\n      format?: string;\n    }\n  >((props, ref) => {\n    const normalizedDate = React.useMemo(() => {\n      if (props.type === \"ulid\") {\n        if (typeof props.timestamp !== \"string\") {\n          return;\n        }\n        return dateFromUlid(props.timestamp);\n      }\n      if (!props.timestamp) {\n        return;\n      }\n      if (props.type === \"unix\" || props.type === \"unixtime\") {\n        const timestamp = typeof props.timestamp === \"number\" ? props.timestamp : +props.timestamp;\n        return new Date(timestamp * 1000);\n      }\n      const validDate = isValid(props.timestamp);\n      if (validDate && props.timestamp instanceof Date) {\n        return props.timestamp;\n      }\n      return new Date(props.timestamp);\n    }, [props.timestamp, props.type]);\n\n    const formatedDate = React.useMemo(() => {\n      if (!isValid(normalizedDate)) {\n        return;\n      }\n      if (normalizedDate instanceof Date) {\n        if (!props.format) {\n          return normalizedDate.toLocaleString();\n        }\n        const templates: {\n          [key: string]: number;\n        } = {\n          y: normalizedDate.getFullYear(),\n          M: normalizedDate.getMonth() + 1,\n          d: normalizedDate.getDate(),\n          H: normalizedDate.getHours(),\n          m: normalizedDate.getMinutes(),\n          s: normalizedDate.getSeconds(),\n        };\n        return props.format.replace(/yyyy|MM|dd|HH|mm|ss|yy/g, (match) => {\n          const padSize = match.length;\n          const first = match.charAt(0);\n\n          const value = templates[first as keyof typeof templates];\n          if (typeof value === \"undefined\") {\n            return match;\n          }\n          return value.toString().padStart(padSize, \"0\");\n        });\n      }\n      return;\n    }, [normalizedDate, props.format]);\n    return (\n      <time className={style.time} {...props} ref={ref}>\n        <Text>{formatedDate}</Text>\n      </time>\n    );\n  }),\n);\nTime.displayName = \"Time\";\n\nconst alphabet = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\n\n// Reference https://github.com/ulid/spec\nconst dateFromUlid = (ulid: string) => {\n  let timestamp = 0;\n  const decodedTimestamp = ulid.substring(0, 10).toUpperCase();\n\n  for (let i = 0; i < decodedTimestamp.length; i++) {\n    const char = decodedTimestamp.charAt(i);\n    const multiplier = alphabet.indexOf(char);\n    const exponent = 9 - i;\n\n    timestamp += Math.pow(32, exponent) * multiplier;\n  }\n\n  return new Date(timestamp);\n};\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./List.module.css\";\nexport const List = memo(\n  forwardRef<HTMLUListElement, React.PropsWithChildren<HTMLAttributes<HTMLUListElement>>>(({ children, ...props }, ref) => {\n    return (\n      <ul className={style.list} {...props} ref={ref}>\n        {children}\n      </ul>\n    );\n  })\n);\nexport const Ul = List;\nList.displayName = \"List\";\nexport const ListItem = memo(\n  forwardRef<HTMLLIElement, React.PropsWithChildren<HTMLAttributes<HTMLLIElement>>>(({ children, ...props }, ref) => {\n    return (\n      <li className={style.listItem} {...props} ref={ref}>\n        <div className={style.listItemLabelArea}>\n          <span className={style.listItemLabel}>{children}</span>\n        </div>\n      </li>\n    );\n  })\n);\nexport const Li = ListItem;\n","import * as React from \"react\";\nimport { forwardRef, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Fieldset = memo(\n  forwardRef<HTMLFieldSetElement, React.JSX.IntrinsicElements[\"fieldset\"]>(({ children, ...props }, ref) => {\n    return (\n      <fieldset className={style.fieldset} {...props} ref={ref}>\n        {children}\n      </fieldset>\n    );\n  }),\n);\nFieldset.displayName = \"Fieldset\";\n","import type { PropsWithChildren } from \"react\";\nimport * as React from \"react\";\nimport { forwardRef, memo } from \"react\";\nimport style from \"./form.module.css\";\nexport const Legend = memo(\n  forwardRef<HTMLLegendElement, PropsWithChildren<{}>>((props, ref) => {\n    return (\n      <legend className={style.legend} ref={ref}>\n        {props.children}\n      </legend>\n    );\n  }),\n);\nLegend.displayName = \"Legend\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./table.module.css\";\n\nexport const Table = memo(\n  forwardRef<HTMLTableElement, HTMLAttributes<HTMLTableElement>>((props, ref) => {\n    return (\n      <table className={style.table} {...props} ref={ref}>\n        {props.children}\n      </table>\n    );\n  }),\n);\nTable.displayName = \"Table\";\n","import * as React from \"react\";\nimport { AllHTMLAttributes, forwardRef, SelectHTMLAttributes } from \"react\";\nimport { ChevronMark } from \"../blocks/ChevronMark\";\nimport classes from \"./Selectbox.module.css\";\nimport { Input } from \"./Input\";\nimport { Label } from \"./Label\";\nimport { Table } from \"../elements/Table\";\nimport { useSelectableOptions } from \"./shared/useSelectableOptions\";\n\nexport const Selectbox = forwardRef<\n  HTMLSelectElement,\n  SelectHTMLAttributes<HTMLSelectElement> & {\n    \"data-variant\"?: string;\n    switch?: \"true\" | \"false\" | undefined;\n  }\n>((props, ref) => {\n  if (props[\"data-variant\"] === \"selectable\") {\n    return <SelectableView switch={props.switch}>{props.children}</SelectableView>;\n  }\n  return (\n    <View hidden={props.hidden}>\n      <select {...props} ref={ref}>\n        {props.children}\n      </select>\n    </View>\n  );\n});\nSelectbox.displayName = \"Selectbox\";\nconst isReadonlyStringArray = (value: any): value is readonly string[] => {\n  return Array.isArray(value);\n};\nconst SelectableView = ({\n  children,\n  hidden,\n  ...props\n}: React.PropsWithChildren<\n  AllHTMLAttributes<HTMLElement> & {\n    switch?: \"true\" | \"false\" | undefined;\n    value?: string | readonly string[];\n    defaultValue?: string | readonly string[];\n  }\n>) => {\n  const selectRef = React.useRef<HTMLSelectElement>(null);\n  const { options, selectedValues, handleToggleOption, handleToggleAll, isCheckedAll, isCheckedPartially } =\n    useSelectableOptions({\n      children,\n      value: props.value,\n      defaultValue: props.defaultValue,\n      multiple: true,\n    });\n\n  const handleChange = React.useCallback(\n    (value: string, checked: boolean) => {\n      const select = selectRef.current;\n      if (!select) {\n        return;\n      }\n      const targetOption = select.querySelector(`option[value=\"${value}\"]`);\n      if (!targetOption) {\n        return;\n      }\n\n      handleToggleOption(value, checked);\n\n      targetOption.setAttribute(\"checked\", checked.toString());\n      const changeEvent = new Event(\"change\", { bubbles: true });\n      select.dispatchEvent(changeEvent);\n    },\n    [handleToggleOption]\n  );\n\n  const handleAllChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback(\n    (e) => {\n      const checked = e.target.checked;\n      const indeterminate = e.target.indeterminate;\n\n      if (indeterminate || checked) {\n        handleToggleAll(true);\n      } else {\n        handleToggleAll(false);\n      }\n\n      const allOptions = selectRef.current?.querySelectorAll(\"option\");\n      if (allOptions) {\n        Array.from(allOptions).forEach((option) => {\n          option.setAttribute(\"checked\", (indeterminate || checked).toString());\n        });\n        const changeEvent = new Event(\"change\", { bubbles: true });\n        selectRef.current?.dispatchEvent(changeEvent);\n      }\n    },\n    [handleToggleAll]\n  );\n\n  return (\n    <div className={classes.selectable} data-hidden={hidden} {...props}>\n      <select\n        {...props}\n        multiple\n        ref={selectRef}\n        style={{\n          display: \"none\",\n        }}\n      >\n        {children}\n      </select>\n      <Table>\n        <thead>\n          <tr>\n            <th className={classes.selectableAll}>\n              <Input\n                type=\"checkbox\"\n                data-size=\"small\"\n                checked={isCheckedAll}\n                onChange={handleAllChange}\n                id={props.id}\n                indeterminate={isCheckedPartially}\n              />\n            </th>\n            <th>{props[\"aria-label\"]}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {options.map((option, index) => {\n            return (\n              <SelectableViewOption\n                values={selectedValues}\n                value={option.value}\n                onChange={handleChange}\n                key={option.value}\n                switch={props.switch}\n              >\n                {option.label}\n              </SelectableViewOption>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div className={classes.mark} role=\"presentation\">\n        <ChevronMark></ChevronMark>\n      </div>\n    </div>\n  );\n};\nconst SelectableViewOption = ({\n  values,\n  value,\n  onChange,\n  children,\n  ...props\n}: {\n  values: string[];\n  value: string;\n  onChange: (value: string, checked: boolean) => void;\n  children?: React.ReactNode;\n  switch?: \"true\" | \"false\" | undefined;\n}) => {\n  const checked = values.includes(value);\n  const id = React.useId();\n  const handleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(value, e.target.checked);\n    },\n    [value, onChange]\n  );\n  return (\n    <tr>\n      <th>\n        <Input type=\"checkbox\" switch={props.switch} data-size=\"small\" checked={checked} onChange={handleChange} id={id} />\n      </th>\n      <td>{children}</td>\n    </tr>\n  );\n};\nexport const View: React.FC<React.PropsWithChildren<AllHTMLAttributes<HTMLElement>>> = ({ children, hidden, ...props }) => {\n  return (\n    <div className={classes.selectbox} data-hidden={hidden} {...props}>\n      {children}\n      <div className={classes.mark} role=\"presentation\">\n        <ChevronMark></ChevronMark>\n      </div>\n    </div>\n  );\n};\nView.displayName = \"View\";\n","import * as React from \"react\";\nimport { forwardRef, memo, TextareaHTMLAttributes } from \"react\";\nimport style from \"./input.module.css\";\n\nexport const Textarea = memo(\n  forwardRef<HTMLTextAreaElement, TextareaHTMLAttributes<HTMLTextAreaElement>>((props, ref) => {\n    return (\n      <textarea className={style.input} {...props} ref={ref}>\n        {props.children}\n      </textarea>\n    );\n  }),\n);\nTextarea.displayName = \"Textarea\";\n","import React, { memo } from \"react\";\nimport { ChevronMark } from \"../blocks/ChevronMark\";\nimport { List } from \"../elements/List\";\nimport style from \"./SidebarList.module.css\";\n\n/**\n * サイドバーセクション全体を囲むコンテナ。\n * @param {boolean} [open] - セクションの開閉状態を制御\n * その他、<details>要素の属性を継承\n */\nconst Container = React.memo(\n  React.forwardRef<HTMLDetailsElement, React.PropsWithChildren<React.AllHTMLAttributes<HTMLDetailsElement>>>((props, ref) => {\n    return (\n      <details className={style.details} {...props} ref={ref}>\n        {props.children}\n      </details>\n    );\n  }),\n);\nContainer.displayName = \"Container\";\n\n/**\n * セクションのタイトル。\n * @param {string} title - タイトル文字列\n * @param {React.ReactNode} [children] - タイトル右側に配置する要素（例: ボタン）\n */\nconst SectionTitle: React.FC<React.PropsWithChildren<{ title: React.ReactNode }>> = React.memo(({ title, children }) => {\n  return (\n    <Summary>\n      <div className={style.sectionTitle}>\n        <span>{title}</span>\n        {children}\n        <i className={style.marker}>\n          <ChevronMark />\n        </i>\n      </div>\n    </Summary>\n  );\n});\nSectionTitle.displayName = \"SectionTitle\";\n\n/**\n * セクションタイトル内などで使うボタン。\n * @param {React.ButtonHTMLAttributes<HTMLButtonElement>} props - ボタン属性\n */\nconst Button = React.forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>((props, ref) => {\n  return <button {...props} ref={ref} className={style.button}></button>;\n});\nButton.displayName = \"Button\";\n\nexport const ListItem: React.FC<\n  React.PropsWithChildren<\n    {\n      label?: React.ReactNode;\n      selected?: boolean;\n      icon?: React.ReactNode;\n      open?: boolean;\n      onClick?: React.MouseEventHandler<HTMLElement>;\n    } & React.HTMLAttributes<HTMLLIElement>\n  >\n> = memo(({ label, onClick, icon, selected, children, open, ...attrs }) => {\n  const LabelAs = onClick ? \"button\" : \"div\";\n  const labelArea = (\n    <LabelAs className={style.listItemLabelArea} onClick={onClick}>\n      {typeof icon === \"string\" ? <div className={style.listItemMarker}>{icon}</div> : icon}\n      <span className={style.listItemLabel}>{label}</span>\n    </LabelAs>\n  );\n  return (\n    <li className={style.listItem} data-selected={selected} {...attrs}>\n      {children ? (\n        <details open={open} className={style.details}>\n          <summary className={style.summary}>\n            {labelArea}\n            <i className={style.marker}>\n              <ChevronMark />\n            </i>\n          </summary>\n          <div className={style.listItemChildren}>{children}</div>\n        </details>\n      ) : (\n        labelArea\n      )}\n    </li>\n  );\n});\n/**\n * セクションのsummary部分。内部利用。\n * @param {React.ReactNode} children - サマリー内に表示する要素\n */\nconst Summary: React.FC<React.PropsWithChildren<{}>> = React.memo(({ children }) => {\n  return <summary className={style.summary}>{children}</summary>;\n});\nSummary.displayName = \"Summary\";\n\nexport const SidebarList = {\n  Button,\n  Container,\n  SectionTitle,\n  Summary,\n  ListItem,\n  List,\n};\n","import React, { useMemo, forwardRef } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Anchor = forwardRef<HTMLAnchorElement, React.JSX.IntrinsicElements[\"a\"]>((props, ref) => {\n  const className = useMemo(() => [style.a, props.className].join(\" \"), [props.className]);\n  return (\n    <a {...props} className={className} ref={ref}>\n      {props.children}\n    </a>\n  );\n});\nAnchor.displayName = \"Anchor\";\nexport const A = Anchor;\n","import React, { forwardRef } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Image = forwardRef<HTMLImageElement, React.JSX.IntrinsicElements[\"img\"]>((props, ref) => {\n  return (\n    <img className={style.image} {...props} ref={ref}>\n      {props.children}\n    </img>\n  );\n});\nImage.displayName = \"Image\";\nexport const Img = Image;\n","import React, { AllHTMLAttributes, forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Details = memo(\n  forwardRef<HTMLDetailsElement, AllHTMLAttributes<HTMLDetailsElement>>((props, ref) => {\n    return (\n      <details className={style.details} {...props} ref={ref}>\n        {props.children}\n      </details>\n    );\n  }),\n);\nDetails.displayName = \"Details\";\n","import { AllHTMLAttributes, forwardRef, memo } from \"react\";\nimport style from \"./elements.module.css\";\nimport React from \"react\";\nimport { ChevronMark } from \"../blocks/ChevronMark\";\n\nexport const Summary = memo(\n  forwardRef<HTMLElement, AllHTMLAttributes<HTMLElement>>((props, ref) => {\n    return (\n      <summary className={style.summary} {...props} ref={ref}>\n        <span className={style.label}>{props.children}</span>\n        <i className={style.marker}>\n          <ChevronMark />\n        </i>\n      </summary>\n    );\n  }),\n);\nSummary.displayName = \"Summary\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Paragraph = memo(\n  forwardRef<HTMLParagraphElement, HTMLAttributes<HTMLParagraphElement>>((props, ref) => {\n    return <p className={style.paragraph} {...props} ref={ref} />;\n  }),\n);\nParagraph.displayName = \"Paragraph\";\nexport const P = Paragraph;\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Descriptions = memo(\n  forwardRef<HTMLDListElement, HTMLAttributes<HTMLDListElement>>((props, ref) => {\n    return (\n      <dl className={style.descriptions} {...props} ref={ref}>\n        {props.children}\n      </dl>\n    );\n  }),\n);\nDescriptions.displayName = \"Descriptions\";\nexport const Dl = Descriptions;\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const HorizontalRule = memo(\n  forwardRef<HTMLHRElement, React.PropsWithChildren<HTMLAttributes<HTMLHRElement>>>((props, ref) => {\n    return (\n      <hr className={style.horizontalrule} {...props} ref={ref}>\n        {props.children}\n      </hr>\n    );\n  }),\n);\nHorizontalRule.displayName = \"HorizontalRule\";\nexport const Hr = HorizontalRule;\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Article = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <article className={style.article} {...props} ref={ref} />;\n  }),\n);\nArticle.displayName = \"Article\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Section = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <section className={style.section} {...props} ref={ref} />;\n  }),\n);\nSection.displayName = \"Section\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Nav = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <nav className={style.nav} {...props} ref={ref} />;\n  }),\n);\nNav.displayName = \"Nav\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Main = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <main className={style.main} {...props} ref={ref} />;\n  }),\n);\nMain.displayName = \"Main\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Header = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <header className={style.header} {...props} ref={ref} />;\n  }),\n);\nHeader.displayName = \"Header\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Footer = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <footer className={style.footer} {...props} ref={ref} />;\n  }),\n);\nFooter.displayName = \"Footer\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Aside = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <aside className={style.aside} {...props} ref={ref} />;\n  }),\n);\nAside.displayName = \"Aside\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Address = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <address className={style.address} {...props} ref={ref} />;\n  }),\n);\nAddress.displayName = \"Address\";\n","import React, { forwardRef, BlockquoteHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Blockquote = memo(\n  forwardRef<HTMLQuoteElement, BlockquoteHTMLAttributes<HTMLQuoteElement>>((props, ref) => {\n    return <blockquote className={style.blockquote} {...props} ref={ref} />;\n  }),\n);\nBlockquote.displayName = \"Blockquote\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Figure = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <figure className={style.figure} {...props} ref={ref} />;\n  }),\n);\nFigure.displayName = \"Figure\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Figcaption = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <figcaption className={style.figcaption} {...props} ref={ref} />;\n  }),\n);\nFigcaption.displayName = \"Figcaption\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Pre = memo(\n  forwardRef<HTMLPreElement, HTMLAttributes<HTMLPreElement>>((props, ref) => {\n    return <pre className={style.pre} {...props} ref={ref} />;\n  }),\n);\nPre.displayName = \"Pre\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Div = memo(\n  forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>((props, ref) => {\n    return <div className={style.div} {...props} ref={ref} />;\n  }),\n);\nDiv.displayName = \"Div\";\n","import React, { forwardRef, FormHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Form = memo(\n  forwardRef<HTMLFormElement, FormHTMLAttributes<HTMLFormElement>>((props, ref) => {\n    return <form className={style.form} {...props} ref={ref} />;\n  }),\n);\nForm.displayName = \"Form\";\n","import React, { forwardRef, ProgressHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Progress = memo(\n  forwardRef<HTMLProgressElement, ProgressHTMLAttributes<HTMLProgressElement>>((props, ref) => {\n    return <progress className={style.progress} {...props} ref={ref} />;\n  }),\n);\nProgress.displayName = \"Progress\";\n","import React, { forwardRef, MeterHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Meter = memo(\n  forwardRef<HTMLMeterElement, MeterHTMLAttributes<HTMLMeterElement>>((props, ref) => {\n    return <meter className={style.meter} {...props} ref={ref} />;\n  }),\n);\nMeter.displayName = \"Meter\";\n","import React, { forwardRef, OutputHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Output = memo(\n  forwardRef<HTMLOutputElement, OutputHTMLAttributes<HTMLOutputElement>>((props, ref) => {\n    return <output className={style.output} {...props} ref={ref} />;\n  }),\n);\nOutput.displayName = \"Output\";\n","import React, { forwardRef, OptgroupHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Optgroup = memo(\n  forwardRef<HTMLOptGroupElement, OptgroupHTMLAttributes<HTMLOptGroupElement>>((props, ref) => {\n    return <optgroup className={style.optgroup} {...props} ref={ref} />;\n  }),\n);\nOptgroup.displayName = \"Optgroup\";\n","import React, { forwardRef, OptionHTMLAttributes, memo } from \"react\";\nimport style from \"./form.module.css\";\n\nexport const Option = memo(\n  forwardRef<HTMLOptionElement, OptionHTMLAttributes<HTMLOptionElement>>((props, ref) => {\n    return <option className={style.option} {...props} ref={ref} />;\n  }),\n);\nOption.displayName = \"Option\";\n","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Strong = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <strong className={style.strong} {...props} ref={ref} />;\n  }),\n);\nStrong.displayName = \"Strong\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Em = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <em className={style.em} {...props} ref={ref} />;\n  }),\n);\nEm.displayName = \"Em\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Small = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <small className={style.small} {...props} ref={ref} />;\n  }),\n);\nSmall.displayName = \"Small\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Mark = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <mark className={style.mark} {...props} ref={ref} />;\n  }),\n);\nMark.displayName = \"Mark\";","import React, { forwardRef, DelHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Del = memo(\n  forwardRef<HTMLModElement, DelHTMLAttributes<HTMLModElement>>((props, ref) => {\n    return <del className={style.del} {...props} ref={ref} />;\n  }),\n);\nDel.displayName = \"Del\";","import React, { forwardRef, InsHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Ins = memo(\n  forwardRef<HTMLModElement, InsHTMLAttributes<HTMLModElement>>((props, ref) => {\n    return <ins className={style.ins} {...props} ref={ref} />;\n  }),\n);\nIns.displayName = \"Ins\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Sub = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <sub className={style.sub} {...props} ref={ref} />;\n  }),\n);\nSub.displayName = \"Sub\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Sup = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <sup className={style.sup} {...props} ref={ref} />;\n  }),\n);\nSup.displayName = \"Sup\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Code = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <code className={style.code} {...props} ref={ref} />;\n  }),\n);\nCode.displayName = \"Code\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Kbd = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <kbd className={style.kbd} {...props} ref={ref} />;\n  }),\n);\nKbd.displayName = \"Kbd\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Samp = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <samp className={style.samp} {...props} ref={ref} />;\n  }),\n);\nSamp.displayName = \"Samp\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Var = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <var className={style.var} {...props} ref={ref} />;\n  }),\n);\nVar.displayName = \"Var\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Abbr = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <abbr className={style.abbr} {...props} ref={ref} />;\n  }),\n);\nAbbr.displayName = \"Abbr\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Cite = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <cite className={style.cite} {...props} ref={ref} />;\n  }),\n);\nCite.displayName = \"Cite\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Dfn = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <dfn className={style.dfn} {...props} ref={ref} />;\n  }),\n);\nDfn.displayName = \"Dfn\";","import React, { forwardRef, QuoteHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Q = memo(\n  forwardRef<HTMLQuoteElement, QuoteHTMLAttributes<HTMLQuoteElement>>((props, ref) => {\n    return <q className={style.q} {...props} ref={ref} />;\n  }),\n);\nQ.displayName = \"Q\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Ruby = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <ruby className={style.ruby} {...props} ref={ref} />;\n  }),\n);\nRuby.displayName = \"Ruby\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Rt = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <rt className={style.rt} {...props} ref={ref} />;\n  }),\n);\nRt.displayName = \"Rt\";","import React, { forwardRef, OlHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Ol = memo(\n  forwardRef<HTMLOListElement, OlHTMLAttributes<HTMLOListElement>>((props, ref) => {\n    return <ol className={style.ol} {...props} ref={ref} />;\n  }),\n);\nOl.displayName = \"Ol\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Dd = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <dd className={style.dd} {...props} ref={ref} />;\n  }),\n);\nDd.displayName = \"Dd\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Dt = memo(\n  forwardRef<HTMLElement, HTMLAttributes<HTMLElement>>((props, ref) => {\n    return <dt className={style.dt} {...props} ref={ref} />;\n  }),\n);\nDt.displayName = \"Dt\";","import React, { forwardRef, ThHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Th = memo(\n  forwardRef<HTMLTableCellElement, ThHTMLAttributes<HTMLTableCellElement>>((props, ref) => {\n    return <th className={style.th} {...props} ref={ref} />;\n  }),\n);\nTh.displayName = \"Th\";","import React, { forwardRef, TdHTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Td = memo(\n  forwardRef<HTMLTableCellElement, TdHTMLAttributes<HTMLTableCellElement>>((props, ref) => {\n    return <td className={style.td} {...props} ref={ref} />;\n  }),\n);\nTd.displayName = \"Td\";","import React, { forwardRef, HTMLAttributes, memo } from \"react\";\nimport style from \"./elements.module.css\";\n\nexport const Caption = memo(\n  forwardRef<HTMLTableCaptionElement, HTMLAttributes<HTMLTableCaptionElement>>((props, ref) => {\n    return <caption className={style.caption} {...props} ref={ref} />;\n  }),\n);\nCaption.displayName = \"Caption\";"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","PointerManager","__publicField","e","index","pointerId","trackTarget","pointerInfo","prevX","prevY","eventType","callback","getZIndexList","a","b","compareTwoPointerIndex","_a","_b","pointerSize","i","az","bz","results","walker","zNumber","tm","useObservePointer","ref","callbackRef","React.useRef","React.useEffect","elm","handlePointerDown","params","useMeasure","measure","setMeasure","React.useState","debounced","React.useDeferredValue","measuring","React.useCallback","boundingBox","observer","entries","usePrevious","state","useRef","useEffect","usePopup","onClose","id","containerRef","bodyRef","dismissRef","memorizedTarget","handleWindowClick","ev","useDocument","React","Portal","children","parentNode","uniqueId","React.useId","mountNode","setMountNode","document","element","zIndexList","React.useMemo","jsx","Fragment","PortalLayer","zIndex","otherZIndex","isMutableRefObject","useMergedRef","refs","node","Dialog","React.memo","React.forwardRef","modal","open","props","baseRef","refLocal","$ref","Wrapper","React.Fragment","dialog","handleClose","backdrop","classes","content","jsxs","DialogFooter","PopupLayout","potal","onCancel","variant","animationName","direction","Drawer","header","classNames","Text","ruby","style","EditableLabel","active","setActive","focus","blur","refCallback","changeEventEmitter","value","onChange","items","setItems","prev","nextItems","item","prevValue","nextValue","current","sameLength","p","weakIdMap","changedItemIndexes","after","before","arrayMove","array","from","to","result","removed","NativeSortable","controlAs","itemsWithIds","setItemsWithIds","elementRefMap","draggingId","setDraggingId","draggingOverId","setDraggingOverId","draggingData","draggingDataRef","onEnd","source","sourceIndex","targetIndex","observe","itemIds","Item","SortableItem","SortableContext","child","clx","args","className","listeners","useSortable","React.createContext","itemId","handleRef","end","React.useContext","handle","disconnect","onDragEnter","onDragStart","event","onDragEnd","onDragOver","handleDrop","captureTarget","TabNav","defaultValue","selectedTab","selectTab","itemKey","handleSelect","SortableItemControl","childrenWithListeners","React.Children","React.isValidElement","React.cloneElement","selected","onSelect","onRequestClose","closeMark","TabBar","memo","tabIndex","defaultSelected","selectedItemIndex","setSelectedItemIndex","useState","useCallback","TabItem","handleClick","ChevronMark","size","defaultSize","SearchIcon","PushButton","Element","NavigationButton","restProps","BackButton","ForwardButton","PullDown","PopUpButton","ComboBox","InputField","SearchField","Title","title","subTitle","Body","Separator","Segment","onClick","isActive","memorizedOnClick","SegmentedControl","selectedIndex","setSelectedIndex","mergedItems","Spacer","Toolbar","css","Icon","src","width","height","postfix","useMemo","matches","IconBase","CloseIcon","IndeterminateIcon","Checkmark","Resizer","autoplace","onResize","originX","originY","max","min","step","origin","handler","resize","position","angle","cursors","cursor","top","left","deltaX","deltaY","useToggle","defaultOpen","setOpen","toggle","controlledIndex","controlled","onPositionChange","onDragPreview","internalIndex","setInternalIndex","itemRect","setItemRect","isDragging","setIsDragging","dragStartIndex","setDragStartIndex","previewIndex","setPreviewIndex","displayIndex","handleIndexChange","newIndex","selectSegment","handleDragStart","handleDragMove","containerRect","relativeX","buttons","buttonRect","buttonRelativeLeft","buttonRelativeRight","handleDragEnd","finalIndex","updateItemRect","rect","relativeRect","resizeObserver","setFocus","focused","toggleFocus","SegmentButton","onPointerDown","onPointerMove","onPointerUp","onPointerCancel","handlePointerUp","handlePointerCancel","handlePointerLeave","levelToHeadingType","Heading","forwardRef","level","createElement","H1","H2","H3","H4","H5","H6","names","Button","color","quiet","rounded","dataVariant","Alert","actions","isLoading","error","description","handleAction","action","hasErrorCause","Modal","isBase64","str","base64String","isURL","options","trimmed","url","useObjectURLs","urlsRef","createObjectURL","file","revokeObjectURL","revokeAllObjectURLs","messages","useMediaInputI18n","customLocale","locale","browserLang","langCode","currentMessages","isDragActive","MediaPreview","alt","maxWidth","maxHeight","minWidth","minHeight","aspectRatioRange","onLoad","onError","handleLoad","img","naturalWidth","naturalHeight","containerStyles","styles","isRelativeURL","MediaInput","maxPreviewWidth","maxPreviewHeight","minPreviewWidth","minPreviewHeight","changed","setChanged","selectedFiles","setSelectedFiles","setIsDragActive","getSelectText","filePreviewable","initialSrc","previewUrls","handleFiles","files","filesArray","changeFileHandler","handleDragEnter","handleDragLeave","handleDragOver","syntheticEvent","hasFiles","safeParseFloat","fallback","RangeInput","base","localValue","setLocalValue","currentValue","bound","handlePointer","seekDelta","seekValue","seekStep","seekClamped","input","changeEvent","SwitchInput","dateToLocaleString","isoString","date","offset","DateTimeInput","classNameRecord","inputStyle","checkboxStyle","radioStyle","Input","errorMessage","errorToolTip","RenderInput","CheckboxInput","indeterminate","inputElement","icon","Label","Children","SortableList","SelectDropdown","isOpen","dialogPosition","selectedValues","multiple","searchTerm","onSearchChange","onOptionToggle","searchPlaceholder","noOptionsMessage","noMatchingMessage","inputRef","handleEscape","handleDialogClick","filteredOptions","option","isSelected","SelectInput","disabled","SelectTags","getOptionLabel","onRemoveTag","placeholder","renderSelected","selectedValue","useSelectBehavior","handleToggleOption","optionValue","newValue","currentArray","v","handleRemoveTag","useSelectDropdown","setIsOpen","setSearchTerm","dropdownPosition","setDropdownPosition","setDialogPosition","dialogRef","calculateDialogPosition","viewportHeight","dropdownMaxHeight","spaceBelow","spaceAbove","dialogPos","openDialog","closeDialog","handleDialogClose","handleResize","isOptionNode","toArray","useSelectableOptions","isControlled","localValues","setLocalValues","checked","handleToggleAll","isCheckedPartially","isCheckedAll","DataList","name","list","handleContainerClick","handleOptionToggle","dataListElement","useDataListElement","setDataListElement","setOptions","optionsData","CloseButton","isValid","Time","normalizedDate","dateFromUlid","timestamp","formatedDate","templates","match","padSize","first","alphabet","ulid","decodedTimestamp","char","multiplier","exponent","List","Ul","ListItem","Li","Fieldset","Legend","Table","Selectbox","SelectableView","View","hidden","selectRef","handleChange","select","targetOption","handleAllChange","allOptions","SelectableViewOption","values","Textarea","Container","SectionTitle","Summary","label","attrs","LabelAs","labelArea","SidebarList","Anchor","A","Image","Img","Details","Paragraph","P","Descriptions","Dl","HorizontalRule","Hr","Article","Section","Nav","Main","Header","Footer","Aside","Address","Blockquote","Figure","Figcaption","Pre","Div","Form","Progress","Meter","Output","Optgroup","Option","Strong","Em","Small","Mark","Del","Ins","Sub","Sup","Code","Kbd","Samp","Var","Abbr","Cite","Dfn","Q","Ruby","Rt","Ol","Dd","Dt","Th","Td","Caption"],"mappings":"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","x_google_ignoreList":[0,1,5]}